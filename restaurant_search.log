2025-01-21 10:24:08,825 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:24:08,825 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:24:09,591 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:24:09,591 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:24:10,203 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:24:10,203 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:24:10,838 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:24:10,838 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:24:16,820 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:24:16,820 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:24:17,366 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:24:17,382 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:24:17,949 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:24:17,949 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:24:18,514 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:24:18,514 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:24:19,110 - DEBUG - Using selector: SelectSelector
2025-01-21 10:24:19,256 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:24:19,256 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:24:19,856 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:24:19,859 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:24:20,464 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:24:20,466 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:24:21,074 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:24:21,074 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:26:15,498 - DEBUG - Calling on_field_start with no data
2025-01-21 10:26:15,513 - DEBUG - Calling on_field_name with data[0:5]
2025-01-21 10:26:15,514 - DEBUG - Calling on_field_data with data[6:32]
2025-01-21 10:26:15,516 - DEBUG - Calling on_field_end with no data
2025-01-21 10:26:15,517 - DEBUG - Calling on_end with no data
2025-01-21 10:26:15,519 - DEBUG - Received query: top 10 biryani spots
2025-01-21 10:26:15,549 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a parameter extraction system for a restaurant search application that handles both English and Hindi/Hinglish queries. For each query, extract key parameters and format them exactly like this example:\n\nParameter: limit\nValue: 10\nDescription: Number of results requested\n\nParameter: dish_type \nValue: biryani\nDescription: Type of dish or cuisine requested\n\nParameter: action\nValue: search\nDescription: Type of action requested\n\nRules:\n1. For number limits (like "top 10"), always use parameter name "limit" with numeric value.\n2. For food items (biryani, dosa etc), always use parameter name "dish_type".\n3. For actions (find, search, batao, dikha etc), always use parameter name "action" with value "search".\n4. For locations (area, jagah etc), use parameter name "location".\n5. Always include descriptions for each parameter.\n6. Format must match the example exactly.\n\nExample inputs and outputs:\n\nInput: "best biryani places in delhi"\nOutput:\nParameter: dish_type\nValue: biryani\nDescription: Type of dish requested\n\nParameter: location\nValue: delhi\nDescription: Search location requested\n\nParameter: action\nValue: search\nDescription: Search action requested\n\nInput: "top 5 dosa ki jagah batao"\nOutput:\nParameter: limit\nValue: 5\nDescription: Number of results requested\n\nParameter: dish_type\nValue: dosa\nDescription: Type of dish requested\n\nParameter: action\nValue: search\nDescription: Search action requested'}, {'role': 'user', 'content': 'Extract parameters from this query: top 10 biryani spots'}], 'model': 'mixtral-8x7b-32768', 'n': 1, 'stop': None, 'stream': False, 'temperature': 1e-08}}
2025-01-21 10:26:15,600 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-01-21 10:26:15,615 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2025-01-21 10:26:15,985 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001C9F988ABF0>
2025-01-21 10:26:15,986 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001C9F98500C0> server_hostname='api.groq.com' timeout=None
2025-01-21 10:26:16,114 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001C9F988ABC0>
2025-01-21 10:26:16,114 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-21 10:26:16,114 - DEBUG - send_request_headers.complete
2025-01-21 10:26:16,114 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-21 10:26:16,114 - DEBUG - send_request_body.complete
2025-01-21 10:26:16,114 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-21 10:26:17,201 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 21 Jan 2025 05:26:16 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'9054e36c6a6b70e8-MRS'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'5000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'4606'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'4.728s'), (b'x-request-id', b'req_01jj3n6rmvf6sar5vbby0rncv5'), (b'Set-Cookie', b'__cf_bm=D6iPVakmpLoJVxvKVMZe2avV0JRqDciC8sUHIbWjLfI-1737437176-1.0.1.1-pb9yAMpjSSz0DOu04AoEJsj2C6A7A3eWUIaYIXT8A6DReUoyvp7LJzZQi0TtV7m4fjNTq4tAxhc1s_08ayTN2A; path=/; expires=Tue, 21-Jan-25 05:56:16 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2025-01-21 10:26:17,201 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-01-21 10:26:17,214 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-21 10:26:17,215 - DEBUG - receive_response_body.complete
2025-01-21 10:26:17,215 - DEBUG - response_closed.started
2025-01-21 10:26:17,215 - DEBUG - response_closed.complete
2025-01-21 10:26:17,220 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 21 Jan 2025 05:26:16 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '9054e36c6a6b70e8-MRS', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '5000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '4606', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '4.728s', 'x-request-id': 'req_01jj3n6rmvf6sar5vbby0rncv5', 'set-cookie': '__cf_bm=D6iPVakmpLoJVxvKVMZe2avV0JRqDciC8sUHIbWjLfI-1737437176-1.0.1.1-pb9yAMpjSSz0DOu04AoEJsj2C6A7A3eWUIaYIXT8A6DReUoyvp7LJzZQi0TtV7m4fjNTq4tAxhc1s_08ayTN2A; path=/; expires=Tue, 21-Jan-25 05:56:16 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2025-01-21 10:26:17,264 - DEBUG - Raw response: Input: "top 10 biryani spots"
Output:
Parameter: limit
Value: 10
Description: Number of results requested

Parameter: dish_type
Value: biryani
Description: Type of dish requested

Parameter: action
Value: search
Description: Search action requested
2025-01-21 10:26:17,271 - DEBUG - Parsed parameters: [{'parameter': 'limit', 'value': 10, 'description': 'Number of results requested'}, {'parameter': 'dish_type', 'value': 'biryani', 'description': 'Type of dish requested'}, {'parameter': 'action', 'value': 'search', 'description': 'Search action requested'}]
2025-01-21 10:26:18,218 - DEBUG - Building SSL context
2025-01-21 10:26:19,521 - DEBUG - Switching to SSL
2025-01-21 10:26:20,290 - DEBUG - SSL has been enabled
2025-01-21 10:26:20,290 - DEBUG - Starting authorization phase
2025-01-21 10:26:20,290 - DEBUG - The provided initial strategy is mysql_native_password
2025-01-21 10:26:20,290 - INFO - package: mysql.connector.plugins
2025-01-21 10:26:20,290 - INFO - plugin_name: mysql_native_password
2025-01-21 10:26:20,309 - INFO - AUTHENTICATION_PLUGIN_CLASS: MySQLNativePasswordAuthPlugin
2025-01-21 10:26:20,807 - DEBUG - Server's response is an auth switch request
2025-01-21 10:26:20,808 - DEBUG - Switching to strategy caching_sha2_password
2025-01-21 10:26:20,810 - INFO - package: mysql.connector.plugins
2025-01-21 10:26:20,810 - INFO - plugin_name: caching_sha2_password
2025-01-21 10:26:20,811 - INFO - AUTHENTICATION_PLUGIN_CLASS: MySQLCachingSHA2PasswordAuthPlugin
2025-01-21 10:26:20,812 - DEBUG - # request: b"*o\x91!\xa5T\x17\xf5'\xb4\xc3\xc0q\x19dr\xea\xe8mRM\xfb\x10\xab7=C\x9b\xcbK\x84\xf9" size: 32
2025-01-21 10:26:21,257 - DEBUG - # server response packet: b'\x02\x00\x00\x05\x01\x03'
2025-01-21 10:26:21,273 - DEBUG - Exchanging further packets
2025-01-21 10:26:21,274 - DEBUG - caching_sha2_password completed succesfully
2025-01-21 10:26:22,145 - DEBUG - Executing SQL: 
            SELECT r.name AS restaurant_name, d.dish_name, d.price, d.popularity_score
            FROM Dishes d
            JOIN Restaurants r ON d.restaurant_id = r.restaurant_id
             WHERE (d.dish_name LIKE %s) LIMIT 10
2025-01-21 10:26:22,145 - DEBUG - With parameters: ['%biryani%']
2025-01-21 10:26:22,964 - INFO - No restaurants found matching the criteria
2025-01-21 10:26:36,134 - DEBUG - Calling on_field_start with no data
2025-01-21 10:26:36,134 - DEBUG - Calling on_field_name with data[0:5]
2025-01-21 10:26:36,134 - DEBUG - Calling on_field_data with data[6:22]
2025-01-21 10:26:36,134 - DEBUG - Calling on_field_end with no data
2025-01-21 10:26:36,134 - DEBUG - Calling on_end with no data
2025-01-21 10:26:36,134 - DEBUG - Received query: top 10 pasta
2025-01-21 10:26:36,157 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a parameter extraction system for a restaurant search application that handles both English and Hindi/Hinglish queries. For each query, extract key parameters and format them exactly like this example:\n\nParameter: limit\nValue: 10\nDescription: Number of results requested\n\nParameter: dish_type \nValue: biryani\nDescription: Type of dish or cuisine requested\n\nParameter: action\nValue: search\nDescription: Type of action requested\n\nRules:\n1. For number limits (like "top 10"), always use parameter name "limit" with numeric value.\n2. For food items (biryani, dosa etc), always use parameter name "dish_type".\n3. For actions (find, search, batao, dikha etc), always use parameter name "action" with value "search".\n4. For locations (area, jagah etc), use parameter name "location".\n5. Always include descriptions for each parameter.\n6. Format must match the example exactly.\n\nExample inputs and outputs:\n\nInput: "best biryani places in delhi"\nOutput:\nParameter: dish_type\nValue: biryani\nDescription: Type of dish requested\n\nParameter: location\nValue: delhi\nDescription: Search location requested\n\nParameter: action\nValue: search\nDescription: Search action requested\n\nInput: "top 5 dosa ki jagah batao"\nOutput:\nParameter: limit\nValue: 5\nDescription: Number of results requested\n\nParameter: dish_type\nValue: dosa\nDescription: Type of dish requested\n\nParameter: action\nValue: search\nDescription: Search action requested'}, {'role': 'user', 'content': 'Extract parameters from this query: top 10 pasta'}], 'model': 'mixtral-8x7b-32768', 'n': 1, 'stop': None, 'stream': False, 'temperature': 1e-08}}
2025-01-21 10:26:36,157 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-01-21 10:26:36,157 - DEBUG - close.started
2025-01-21 10:26:36,166 - DEBUG - close.complete
2025-01-21 10:26:36,167 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2025-01-21 10:26:36,288 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001C9F98E5EA0>
2025-01-21 10:26:36,289 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001C9F98500C0> server_hostname='api.groq.com' timeout=None
2025-01-21 10:26:36,417 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001C9F98E5E70>
2025-01-21 10:26:36,418 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-21 10:26:36,419 - DEBUG - send_request_headers.complete
2025-01-21 10:26:36,419 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-21 10:26:36,419 - DEBUG - send_request_body.complete
2025-01-21 10:26:36,419 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-21 10:26:37,021 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 21 Jan 2025 05:26:36 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'9054e3eb5db30db1-MRS'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'5000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'4609'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'4.692s'), (b'x-request-id', b'req_01jj3n7c0yf0ht445sghg1ya0e'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2025-01-21 10:26:37,021 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-01-21 10:26:37,021 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-21 10:26:37,036 - DEBUG - receive_response_body.complete
2025-01-21 10:26:37,040 - DEBUG - response_closed.started
2025-01-21 10:26:37,041 - DEBUG - response_closed.complete
2025-01-21 10:26:37,042 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 21 Jan 2025 05:26:36 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '9054e3eb5db30db1-MRS', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '5000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '4609', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '4.692s', 'x-request-id': 'req_01jj3n7c0yf0ht445sghg1ya0e', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2025-01-21 10:26:37,047 - DEBUG - Raw response: Input: "top 10 pasta"
Output:
Parameter: limit
Value: 10
Description: Number of results requested

Parameter: dish_type
Value: pasta
Description: Type of dish requested

Parameter: action
Value: search
Description: Search action requested
2025-01-21 10:26:37,055 - DEBUG - Parsed parameters: [{'parameter': 'limit', 'value': 10, 'description': 'Number of results requested'}, {'parameter': 'action', 'value': 'search', 'description': 'Search action requested'}]
2025-01-21 10:26:37,605 - DEBUG - Building SSL context
2025-01-21 10:26:38,908 - DEBUG - Switching to SSL
2025-01-21 10:26:39,474 - DEBUG - SSL has been enabled
2025-01-21 10:26:39,474 - DEBUG - Starting authorization phase
2025-01-21 10:26:39,474 - DEBUG - The provided initial strategy is mysql_native_password
2025-01-21 10:26:39,893 - DEBUG - Server's response is an auth switch request
2025-01-21 10:26:39,893 - DEBUG - Switching to strategy caching_sha2_password
2025-01-21 10:26:39,893 - DEBUG - # request: b"\xf5\xf9\xb7\x10@\xa2\x06&\x9eA'\xf8sYo\xfe\xc2\xb2\xd5\xfc\xb7\xaf(\x13<y{\x9b\xf3\x9b\x9b\xfc" size: 32
2025-01-21 10:26:40,180 - DEBUG - # server response packet: b'\x02\x00\x00\x05\x01\x03'
2025-01-21 10:26:40,181 - DEBUG - Exchanging further packets
2025-01-21 10:26:40,182 - DEBUG - caching_sha2_password completed succesfully
2025-01-21 10:26:41,051 - DEBUG - Executing SQL: 
            SELECT r.name AS restaurant_name, d.dish_name, d.price, d.popularity_score
            FROM Dishes d
            JOIN Restaurants r ON d.restaurant_id = r.restaurant_id
             LIMIT 10
2025-01-21 10:26:41,053 - DEBUG - With parameters: []
2025-01-21 10:30:33,893 - DEBUG - close.started
2025-01-21 10:30:33,893 - DEBUG - close.complete
2025-01-21 10:30:44,218 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:30:44,220 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:30:44,916 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:30:44,931 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:30:45,817 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:30:45,821 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:30:46,485 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:30:46,501 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:30:47,435 - DEBUG - Using selector: SelectSelector
2025-01-21 10:30:47,634 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:30:47,637 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:30:48,290 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:30:48,290 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:30:49,061 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:30:49,064 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:30:49,708 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:30:49,724 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:32:09,080 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:32:09,083 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:32:10,111 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:32:10,113 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:32:11,016 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:32:11,020 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:32:11,953 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:32:11,957 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:32:13,004 - DEBUG - Using selector: SelectSelector
2025-01-21 10:32:13,210 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:32:13,212 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:32:13,928 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:32:13,932 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:32:14,885 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:32:14,885 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:32:16,884 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:32:16,895 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:33:05,277 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:33:05,278 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:33:05,979 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:33:05,979 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:33:06,647 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:33:06,647 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:33:07,282 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:33:07,282 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:33:07,883 - DEBUG - Using selector: SelectSelector
2025-01-21 10:33:08,016 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:33:08,016 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:33:08,634 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:33:08,634 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:33:09,904 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:33:09,904 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:33:10,585 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:33:10,585 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:33:11,676 - DEBUG - Calling on_field_start with no data
2025-01-21 10:33:11,691 - DEBUG - Calling on_field_name with data[0:5]
2025-01-21 10:33:11,691 - DEBUG - Calling on_field_data with data[6:22]
2025-01-21 10:33:11,691 - DEBUG - Calling on_field_end with no data
2025-01-21 10:33:11,691 - DEBUG - Calling on_end with no data
2025-01-21 10:33:11,691 - DEBUG - Received query: top 10 pasta
2025-01-21 10:33:11,708 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a parameter extraction system for a restaurant search application that handles both English and Hindi/Hinglish queries. For each query, extract key parameters and format them exactly like this example:\n\nParameter: limit\nValue: 10\nDescription: Number of results requested\n\nParameter: dish_type \nValue: biryani\nDescription: Type of dish or cuisine requested\n\nParameter: action\nValue: search\nDescription: Type of action requested\n\nRules:\n1. For number limits (like "top 10"), always use parameter name "limit" with numeric value.\n2. For food items (biryani, dosa etc), always use parameter name "dish_type".\n3. For actions (find, search, batao, dikha etc), always use parameter name "action" with value "search".\n4. For locations (area, jagah etc), use parameter name "location".\n5. Always include descriptions for each parameter.\n6. Format must match the example exactly.\n\nExample inputs and outputs:\n\nInput: "best biryani places in delhi"\nOutput:\nParameter: dish_type\nValue: biryani\nDescription: Type of dish requested\n\nParameter: location\nValue: delhi\nDescription: Search location requested\n\nParameter: action\nValue: search\nDescription: Search action requested\n\nInput: "top 5 dosa ki jagah batao"\nOutput:\nParameter: limit\nValue: 5\nDescription: Number of results requested\n\nParameter: dish_type\nValue: dosa\nDescription: Type of dish requested\n\nParameter: action\nValue: search\nDescription: Search action requested'}, {'role': 'user', 'content': 'Extract parameters from this query: top 10 pasta'}], 'model': 'mixtral-8x7b-32768', 'n': 1, 'stop': None, 'stream': False, 'temperature': 1e-08}}
2025-01-21 10:33:11,741 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-01-21 10:33:11,757 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2025-01-21 10:33:11,872 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000265FCEE2050>
2025-01-21 10:33:11,872 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000265FCEA80C0> server_hostname='api.groq.com' timeout=None
2025-01-21 10:33:12,029 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000265FCEE2020>
2025-01-21 10:33:12,030 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-21 10:33:12,032 - DEBUG - send_request_headers.complete
2025-01-21 10:33:12,032 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-21 10:33:12,034 - DEBUG - send_request_body.complete
2025-01-21 10:33:12,034 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-21 10:33:12,622 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 21 Jan 2025 05:33:12 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'9054ed940d9d11a2-MRS'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'5000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'4609'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'4.692s'), (b'x-request-id', b'req_01jj3nkecje5v8yndzkn2w8ama'), (b'Set-Cookie', b'__cf_bm=xSeVHCJ.p87ke7SOi1lDL.AhEPIlCNSA0zerLHCxwqA-1737437592-1.0.1.1-Vc5A_cbPwFh.ALCeh6iu1.tCvyAzAwfN19tMTGrH_c6WM9JeIwEEwIo7mqcrfDcsgaUG99UhThQfAS5hY1ojAA; path=/; expires=Tue, 21-Jan-25 06:03:12 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2025-01-21 10:33:12,637 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-01-21 10:33:12,650 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-21 10:33:12,661 - DEBUG - receive_response_body.complete
2025-01-21 10:33:12,663 - DEBUG - response_closed.started
2025-01-21 10:33:12,663 - DEBUG - response_closed.complete
2025-01-21 10:33:12,664 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 21 Jan 2025 05:33:12 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '9054ed940d9d11a2-MRS', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '5000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '4609', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '4.692s', 'x-request-id': 'req_01jj3nkecje5v8yndzkn2w8ama', 'set-cookie': '__cf_bm=xSeVHCJ.p87ke7SOi1lDL.AhEPIlCNSA0zerLHCxwqA-1737437592-1.0.1.1-Vc5A_cbPwFh.ALCeh6iu1.tCvyAzAwfN19tMTGrH_c6WM9JeIwEEwIo7mqcrfDcsgaUG99UhThQfAS5hY1ojAA; path=/; expires=Tue, 21-Jan-25 06:03:12 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2025-01-21 10:33:12,696 - DEBUG - Raw response: Input: "top 10 pasta"
Output:
Parameter: limit
Value: 10
Description: Number of results requested

Parameter: dish_type
Value: pasta
Description: Type of dish requested

Parameter: action
Value: search
Description: Search action requested
2025-01-21 10:33:12,696 - DEBUG - Parsed parameters: [{'parameter': 'limit', 'value': 10, 'description': 'Number of results requested'}, {'parameter': 'action', 'value': 'search', 'description': 'Search action requested'}]
2025-01-21 10:33:13,641 - DEBUG - Building SSL context
2025-01-21 10:33:14,868 - DEBUG - Switching to SSL
2025-01-21 10:33:15,660 - DEBUG - SSL has been enabled
2025-01-21 10:33:15,660 - DEBUG - Starting authorization phase
2025-01-21 10:33:15,660 - DEBUG - The provided initial strategy is mysql_native_password
2025-01-21 10:33:15,660 - INFO - package: mysql.connector.plugins
2025-01-21 10:33:15,660 - INFO - plugin_name: mysql_native_password
2025-01-21 10:33:15,672 - INFO - AUTHENTICATION_PLUGIN_CLASS: MySQLNativePasswordAuthPlugin
2025-01-21 10:33:16,062 - DEBUG - Server's response is an auth switch request
2025-01-21 10:33:16,062 - DEBUG - Switching to strategy caching_sha2_password
2025-01-21 10:33:16,062 - INFO - package: mysql.connector.plugins
2025-01-21 10:33:16,062 - INFO - plugin_name: caching_sha2_password
2025-01-21 10:33:16,062 - INFO - AUTHENTICATION_PLUGIN_CLASS: MySQLCachingSHA2PasswordAuthPlugin
2025-01-21 10:33:16,062 - DEBUG - # request: b'\xc8$\x88[t\x06=\xdb\xfd\x89\xa2\xfb7\xe8\x8d\xbbJa\x06\xae\x87>\xcb\x94\xfa\xc63\xd9\xa1\xee\xb6>' size: 32
2025-01-21 10:33:16,313 - DEBUG - # server response packet: b'\x02\x00\x00\x05\x01\x03'
2025-01-21 10:33:16,313 - DEBUG - Exchanging further packets
2025-01-21 10:33:16,313 - DEBUG - caching_sha2_password completed succesfully
2025-01-21 10:33:17,099 - DEBUG - Executing SQL: 
            SELECT r.name AS restaurant_name, d.dish_name, d.price, d.popularity_score
            FROM Dishes d
            JOIN Restaurants r ON d.restaurant_id = r.restaurant_id
             LIMIT 10
2025-01-21 10:33:17,099 - DEBUG - With parameters: []
2025-01-21 10:35:00,636 - DEBUG - close.started
2025-01-21 10:35:00,636 - DEBUG - close.complete
2025-01-21 10:35:08,505 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:35:08,507 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:35:09,094 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:35:09,096 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:35:09,782 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:35:09,787 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:35:10,451 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:35:10,453 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:35:11,693 - DEBUG - Using selector: SelectSelector
2025-01-21 10:35:12,005 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:35:12,007 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:35:13,021 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:35:13,023 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:35:13,745 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:35:13,747 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:35:14,458 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:35:14,460 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:35:29,877 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:35:29,879 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:35:30,553 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:35:30,555 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:35:31,203 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:35:31,205 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:35:31,877 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:35:31,879 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:35:32,576 - DEBUG - Using selector: SelectSelector
2025-01-21 10:35:32,707 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:35:32,709 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:35:33,378 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:35:33,381 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:35:34,114 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:35:34,116 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:35:34,796 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:35:34,799 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:35:35,581 - DEBUG - Calling on_field_start with no data
2025-01-21 10:35:35,582 - DEBUG - Calling on_field_name with data[0:5]
2025-01-21 10:35:35,583 - DEBUG - Calling on_field_data with data[6:22]
2025-01-21 10:35:35,584 - DEBUG - Calling on_field_end with no data
2025-01-21 10:35:35,585 - DEBUG - Calling on_end with no data
2025-01-21 10:35:35,586 - DEBUG - Received query: top 10 pasta
2025-01-21 10:35:35,601 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a parameter extraction system for a restaurant search application that handles both English and Hindi/Hinglish queries. For each query, extract key parameters and format them exactly like this example:\n\nParameter: limit\nValue: 10\nDescription: Number of results requested\n\nParameter: dish_type \nValue: biryani\nDescription: Type of dish or cuisine requested\n\nParameter: action\nValue: search\nDescription: Type of action requested\n\nRules:\n1. For number limits (like "top 10"), always use parameter name "limit" with numeric value.\n2. For food items (biryani, dosa etc), always use parameter name "dish_type".\n3. For actions (find, search, batao, dikha etc), always use parameter name "action" with value "search".\n4. For locations (area, jagah etc), use parameter name "location".\n5. Always include descriptions for each parameter.\n6. Format must match the example exactly.\n\nExample inputs and outputs:\n\nInput: "best biryani places in delhi"\nOutput:\nParameter: dish_type\nValue: biryani\nDescription: Type of dish requested\n\nParameter: location\nValue: delhi\nDescription: Search location requested\n\nParameter: action\nValue: search\nDescription: Search action requested\n\nInput: "top 5 dosa ki jagah batao"\nOutput:\nParameter: limit\nValue: 5\nDescription: Number of results requested\n\nParameter: dish_type\nValue: dosa\nDescription: Type of dish requested\n\nParameter: action\nValue: search\nDescription: Search action requested'}, {'role': 'user', 'content': 'Extract parameters from this query: top 10 pasta'}], 'model': 'mixtral-8x7b-32768', 'n': 1, 'stop': None, 'stream': False, 'temperature': 1e-08}}
2025-01-21 10:35:35,640 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-01-21 10:35:35,641 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2025-01-21 10:35:35,760 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001DCFC452050>
2025-01-21 10:35:35,762 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001DCFC4180C0> server_hostname='api.groq.com' timeout=None
2025-01-21 10:35:35,882 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001DCFC452020>
2025-01-21 10:35:35,884 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-21 10:35:35,884 - DEBUG - send_request_headers.complete
2025-01-21 10:35:35,886 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-21 10:35:35,887 - DEBUG - send_request_body.complete
2025-01-21 10:35:35,888 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-21 10:35:37,034 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 21 Jan 2025 05:35:36 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'9054f1170d450cf8-MRS'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'5000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'4609'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'4.692s'), (b'x-request-id', b'req_01jj3nqtwqeqgs86n2ffha9a56'), (b'Set-Cookie', b'__cf_bm=NFWoiQUh0eDTAl86Xq56fuRY2AVmJCtVU6ZJ3eNHgoQ-1737437736-1.0.1.1-UHvZmB0CxHpgw_p.xMIiIHbVwv1Qtal49Wchk._Fn7FzrI0GmqxN.mE4OaZyVvs0FarJlrHpwHa0Yo6SMXEADw; path=/; expires=Tue, 21-Jan-25 06:05:36 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2025-01-21 10:35:37,041 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-01-21 10:35:37,042 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-21 10:35:37,447 - DEBUG - receive_response_body.complete
2025-01-21 10:35:37,449 - DEBUG - response_closed.started
2025-01-21 10:35:37,449 - DEBUG - response_closed.complete
2025-01-21 10:35:37,451 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 21 Jan 2025 05:35:36 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '9054f1170d450cf8-MRS', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '5000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '4609', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '4.692s', 'x-request-id': 'req_01jj3nqtwqeqgs86n2ffha9a56', 'set-cookie': '__cf_bm=NFWoiQUh0eDTAl86Xq56fuRY2AVmJCtVU6ZJ3eNHgoQ-1737437736-1.0.1.1-UHvZmB0CxHpgw_p.xMIiIHbVwv1Qtal49Wchk._Fn7FzrI0GmqxN.mE4OaZyVvs0FarJlrHpwHa0Yo6SMXEADw; path=/; expires=Tue, 21-Jan-25 06:05:36 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2025-01-21 10:35:37,489 - DEBUG - Raw response: Input: "top 10 pasta"
Output:
Parameter: limit
Value: 10
Description: Number of results requested

Parameter: dish_type
Value: pasta
Description: Type of dish requested

Parameter: action
Value: search
Description: Search action requested
2025-01-21 10:35:37,492 - DEBUG - Parsed parameters: [{'parameter': 'limit', 'value': 10, 'description': 'Number of results requested'}, {'parameter': 'action', 'value': 'search', 'description': 'Search action requested'}]
2025-01-21 10:35:38,349 - DEBUG - Building SSL context
2025-01-21 10:35:39,722 - DEBUG - Switching to SSL
2025-01-21 10:35:40,816 - DEBUG - SSL has been enabled
2025-01-21 10:35:40,818 - DEBUG - Starting authorization phase
2025-01-21 10:35:40,822 - DEBUG - The provided initial strategy is mysql_native_password
2025-01-21 10:35:40,824 - INFO - package: mysql.connector.plugins
2025-01-21 10:35:40,824 - INFO - plugin_name: mysql_native_password
2025-01-21 10:35:40,829 - INFO - AUTHENTICATION_PLUGIN_CLASS: MySQLNativePasswordAuthPlugin
2025-01-21 10:35:41,558 - DEBUG - Server's response is an auth switch request
2025-01-21 10:35:41,560 - DEBUG - Switching to strategy caching_sha2_password
2025-01-21 10:35:41,561 - INFO - package: mysql.connector.plugins
2025-01-21 10:35:41,562 - INFO - plugin_name: caching_sha2_password
2025-01-21 10:35:41,564 - INFO - AUTHENTICATION_PLUGIN_CLASS: MySQLCachingSHA2PasswordAuthPlugin
2025-01-21 10:35:41,565 - DEBUG - # request: b'\x0eJQ-\x04\xd3\x9a\xcbbL1\x94`\x9bM\xfbI\xf3\xa6\x9e\x9e\x11\x0b\x89\xdb\xe2\xcc\x06T\xd4\x9f\xf9' size: 32
2025-01-21 10:35:41,830 - DEBUG - # server response packet: b'\x02\x00\x00\x05\x01\x03'
2025-01-21 10:35:41,832 - DEBUG - Exchanging further packets
2025-01-21 10:35:41,833 - DEBUG - caching_sha2_password completed succesfully
2025-01-21 10:35:42,656 - DEBUG - Executing SQL: 
            SELECT r.name AS restaurant_name, d.dish_name, d.price, d.popularity_score
            FROM Dishes d
            JOIN Restaurants r ON d.restaurant_id = r.restaurant_id
             LIMIT 10
2025-01-21 10:35:42,662 - DEBUG - With parameters: []
2025-01-21 10:39:03,473 - DEBUG - close.started
2025-01-21 10:39:03,500 - DEBUG - close.complete
2025-01-21 10:39:09,740 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:39:09,740 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:39:10,323 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:39:10,326 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:39:10,925 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:39:10,925 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:39:11,529 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:39:11,529 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:39:12,134 - DEBUG - Using selector: SelectSelector
2025-01-21 10:39:12,247 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:39:12,247 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:39:12,855 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:39:12,855 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:39:13,533 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:39:13,533 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:39:14,208 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:39:14,208 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:40:18,172 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:40:18,172 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:40:18,756 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:40:18,756 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:40:19,340 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:40:19,340 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:40:19,910 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:40:19,910 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:40:20,526 - DEBUG - Using selector: SelectSelector
2025-01-21 10:40:20,641 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:40:20,641 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:40:21,217 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:40:21,217 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:40:21,780 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:40:21,797 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:40:22,362 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:40:22,362 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:40:25,288 - DEBUG - Calling on_field_start with no data
2025-01-21 10:40:25,288 - DEBUG - Calling on_field_name with data[0:5]
2025-01-21 10:40:25,288 - DEBUG - Calling on_field_data with data[6:22]
2025-01-21 10:40:25,288 - DEBUG - Calling on_field_end with no data
2025-01-21 10:40:25,288 - DEBUG - Calling on_end with no data
2025-01-21 10:40:25,288 - DEBUG - Received query: top 10 pasta
2025-01-21 10:40:25,308 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a parameter extraction system for a restaurant search application that handles both English and Hindi/Hinglish queries. For each query, extract key parameters and format them exactly like this example:\n\nParameter: limit\nValue: 10\nDescription: Number of results requested\n\nParameter: dish_type \nValue: biryani\nDescription: Type of dish or cuisine requested\n\nParameter: action\nValue: search\nDescription: Type of action requested\n\nRules:\n1. For number limits (like "top 10"), always use parameter name "limit" with numeric value.\n2. For food items (biryani, dosa etc), always use parameter name "dish_type".\n3. For actions (find, search, batao, dikha etc), always use parameter name "action" with value "search".\n4. For locations (area, jagah etc), use parameter name "location".\n5. Always include descriptions for each parameter.\n6. Format must match the example exactly.\n\nExample inputs and outputs:\n\nInput: "best biryani places in delhi"\nOutput:\nParameter: dish_type\nValue: biryani\nDescription: Type of dish requested\n\nParameter: location\nValue: delhi\nDescription: Search location requested\n\nParameter: action\nValue: search\nDescription: Search action requested\n\nInput: "top 5 dosa ki jagah batao"\nOutput:\nParameter: limit\nValue: 5\nDescription: Number of results requested\n\nParameter: dish_type\nValue: dosa\nDescription: Type of dish requested\n\nParameter: action\nValue: search\nDescription: Search action requested'}, {'role': 'user', 'content': 'Extract parameters from this query: top 10 pasta'}], 'model': 'mixtral-8x7b-32768', 'n': 1, 'stop': None, 'stream': False, 'temperature': 1e-08}}
2025-01-21 10:40:25,343 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-01-21 10:40:25,343 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2025-01-21 10:40:25,605 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029A3E531F90>
2025-01-21 10:40:25,605 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000029A3E4F80C0> server_hostname='api.groq.com' timeout=None
2025-01-21 10:40:25,722 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029A3E531F60>
2025-01-21 10:40:25,722 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-21 10:40:25,738 - DEBUG - send_request_headers.complete
2025-01-21 10:40:25,738 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-21 10:40:25,738 - DEBUG - send_request_body.complete
2025-01-21 10:40:25,738 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-21 10:40:26,356 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 21 Jan 2025 05:40:25 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'9054f82ac9a0e17d-MRS'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'5000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'4609'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'4.692s'), (b'x-request-id', b'req_01jj3p0ny0e7ht04sg53q0eqn3'), (b'Set-Cookie', b'__cf_bm=TYKwlyaAUSJHfx3znCU8a0zThqoeLrsyf7D_8.czkc8-1737438025-1.0.1.1-_vjDmckzBBd7d9i37tWtm3UkhhMwtHOCC6IFFfw5VCUuL1OIBYZYfF35W4c3oqcLVvbPaZwWI6dKGx40KvIvRA; path=/; expires=Tue, 21-Jan-25 06:10:25 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2025-01-21 10:40:26,356 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-01-21 10:40:26,356 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-21 10:40:26,372 - DEBUG - receive_response_body.complete
2025-01-21 10:40:26,373 - DEBUG - response_closed.started
2025-01-21 10:40:26,375 - DEBUG - response_closed.complete
2025-01-21 10:40:26,376 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 21 Jan 2025 05:40:25 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '9054f82ac9a0e17d-MRS', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '5000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '4609', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '4.692s', 'x-request-id': 'req_01jj3p0ny0e7ht04sg53q0eqn3', 'set-cookie': '__cf_bm=TYKwlyaAUSJHfx3znCU8a0zThqoeLrsyf7D_8.czkc8-1737438025-1.0.1.1-_vjDmckzBBd7d9i37tWtm3UkhhMwtHOCC6IFFfw5VCUuL1OIBYZYfF35W4c3oqcLVvbPaZwWI6dKGx40KvIvRA; path=/; expires=Tue, 21-Jan-25 06:10:25 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2025-01-21 10:40:26,407 - DEBUG - Raw response: Input: "top 10 pasta"
Output:
Parameter: limit
Value: 10
Description: Number of results requested

Parameter: dish_type
Value: pasta
Description: Type of dish requested

Parameter: action
Value: search
Description: Search action requested
2025-01-21 10:40:26,407 - DEBUG - Parsed parameters: [{'parameter': 'limit', 'value': 10, 'description': 'Number of results requested'}, {'parameter': 'action', 'value': 'search', 'description': 'Search action requested'}]
2025-01-21 10:40:27,323 - DEBUG - Building SSL context
2025-01-21 10:40:28,791 - DEBUG - Switching to SSL
2025-01-21 10:40:29,310 - DEBUG - SSL has been enabled
2025-01-21 10:40:29,310 - DEBUG - Starting authorization phase
2025-01-21 10:40:29,310 - DEBUG - The provided initial strategy is mysql_native_password
2025-01-21 10:40:29,310 - INFO - package: mysql.connector.plugins
2025-01-21 10:40:29,325 - INFO - plugin_name: mysql_native_password
2025-01-21 10:40:29,330 - INFO - AUTHENTICATION_PLUGIN_CLASS: MySQLNativePasswordAuthPlugin
2025-01-21 10:40:29,728 - DEBUG - Server's response is an auth switch request
2025-01-21 10:40:29,728 - DEBUG - Switching to strategy caching_sha2_password
2025-01-21 10:40:29,728 - INFO - package: mysql.connector.plugins
2025-01-21 10:40:29,728 - INFO - plugin_name: caching_sha2_password
2025-01-21 10:40:29,728 - INFO - AUTHENTICATION_PLUGIN_CLASS: MySQLCachingSHA2PasswordAuthPlugin
2025-01-21 10:40:29,743 - DEBUG - # request: b'9\x14\xaf\x96\xe6\x14\xd9h-\xbac\xd0\xdar\x82oKLL4\x11\xfb\x86\xe6bsQ\xa4\xe8AW\x00' size: 32
2025-01-21 10:40:29,994 - DEBUG - # server response packet: b'\x02\x00\x00\x05\x01\x03'
2025-01-21 10:40:29,994 - DEBUG - Exchanging further packets
2025-01-21 10:40:29,994 - DEBUG - caching_sha2_password completed succesfully
2025-01-21 10:40:30,763 - DEBUG - Executing SQL: 
            SELECT r.name AS restaurant_name, d.dish_name, d.price, d.popularity_score
            FROM Dishes d
            JOIN Restaurants r ON d.restaurant_id = r.restaurant_id
             LIMIT 10
2025-01-21 10:40:30,763 - DEBUG - With parameters: []
2025-01-21 10:40:48,631 - DEBUG - close.started
2025-01-21 10:40:48,631 - DEBUG - close.complete
2025-01-21 10:40:55,280 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:40:55,280 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:40:55,862 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:40:55,862 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:40:56,499 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:40:56,499 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:40:57,128 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:40:57,128 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:40:57,829 - DEBUG - Using selector: SelectSelector
2025-01-21 10:40:57,982 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:40:57,982 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:40:58,697 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:40:58,697 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:40:59,339 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:40:59,342 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:40:59,971 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:40:59,973 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:41:01,937 - DEBUG - Calling on_field_start with no data
2025-01-21 10:41:01,937 - DEBUG - Calling on_field_name with data[0:5]
2025-01-21 10:41:01,937 - DEBUG - Calling on_field_data with data[6:22]
2025-01-21 10:41:01,937 - DEBUG - Calling on_field_end with no data
2025-01-21 10:41:01,937 - DEBUG - Calling on_end with no data
2025-01-21 10:41:01,937 - DEBUG - Received query: top 10 pasta
2025-01-21 10:41:01,961 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a helpful assistant that extracts structured search parameters.'}, {'role': 'user', 'content': 'Extract structured parameters from the query: top 10 pasta'}], 'model': 'mixtral-8x7b-32768', 'n': 1, 'stop': None, 'stream': False, 'temperature': 1e-08}}
2025-01-21 10:41:01,983 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-01-21 10:41:01,988 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2025-01-21 10:41:02,272 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002615172CAC0>
2025-01-21 10:41:02,272 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000261516E84C0> server_hostname='api.groq.com' timeout=None
2025-01-21 10:41:03,592 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002615172CA90>
2025-01-21 10:41:03,606 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-21 10:41:03,609 - DEBUG - send_request_headers.complete
2025-01-21 10:41:03,610 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-21 10:41:03,611 - DEBUG - send_request_body.complete
2025-01-21 10:41:03,612 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-21 10:41:04,273 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 21 Jan 2025 05:41:03 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'9054f9176b20e1d9-MRS'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'5000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'4966'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'408ms'), (b'x-request-id', b'req_01jj3p1twrehz92cskpbwsh43a'), (b'Set-Cookie', b'__cf_bm=2TzgNADkMOzLJoJcxb1Ok1jnvfyhbh6AWwbRzVFsPQs-1737438063-1.0.1.1-YFc9NYBrSaiBpdqkGHtjvxewcWsg_IGBOQ64KHvGxTXuJ7srJ3vfnqMqGZbpwBHIR42sd8Hl_VdDOd16zgDDOA; path=/; expires=Tue, 21-Jan-25 06:11:03 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2025-01-21 10:41:04,286 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-01-21 10:41:04,299 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-21 10:41:04,306 - DEBUG - receive_response_body.complete
2025-01-21 10:41:04,307 - DEBUG - response_closed.started
2025-01-21 10:41:04,311 - DEBUG - response_closed.complete
2025-01-21 10:41:04,312 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 21 Jan 2025 05:41:03 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '9054f9176b20e1d9-MRS', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '5000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '4966', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '408ms', 'x-request-id': 'req_01jj3p1twrehz92cskpbwsh43a', 'set-cookie': '__cf_bm=2TzgNADkMOzLJoJcxb1Ok1jnvfyhbh6AWwbRzVFsPQs-1737438063-1.0.1.1-YFc9NYBrSaiBpdqkGHtjvxewcWsg_IGBOQ64KHvGxTXuJ7srJ3vfnqMqGZbpwBHIR42sd8Hl_VdDOd16zgDDOA; path=/; expires=Tue, 21-Jan-25 06:11:03 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2025-01-21 10:41:04,496 - DEBUG - ChatGroq response: Sure, I can help you extract structured search parameters from the query you provided. Here's what I was able to extract:

Parameter: Result limit
Value: 10

Parameter: Search query
Value: pasta

Explanation:

* The parameter "Result limit" indicates that the user wants to see only the top 10 results.
* The parameter "Search query" contains the keyword "pasta" which the user is searching for.

Note that the structure of the search parameters may vary depending on the context and the specific search engine or application being used.
2025-01-21 10:41:04,513 - DEBUG - Raw response: Sure, I can help you extract structured search parameters from the query you provided. Here's what I was able to extract:

Parameter: Result limit
Value: 10

Parameter: Search query
Value: pasta

Explanation:

* The parameter "Result limit" indicates that the user wants to see only the top 10 results.
* The parameter "Search query" contains the keyword "pasta" which the user is searching for.

Note that the structure of the search parameters may vary depending on the context and the specific search engine or application being used.
2025-01-21 10:41:04,528 - ERROR - Error in search endpoint: execute_query() takes 1 positional argument but 2 were given
2025-01-21 10:43:19,316 - DEBUG - close.started
2025-01-21 10:43:19,318 - DEBUG - close.complete
2025-01-21 10:43:25,973 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:43:25,973 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:43:26,608 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:43:26,608 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:43:27,192 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:43:27,192 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:43:27,776 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:43:27,776 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:43:28,382 - DEBUG - Using selector: SelectSelector
2025-01-21 10:43:28,510 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:43:28,510 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:43:29,129 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:43:29,129 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:43:29,713 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:43:29,713 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:43:30,298 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:43:30,298 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:43:32,790 - DEBUG - Calling on_field_start with no data
2025-01-21 10:43:32,790 - DEBUG - Calling on_field_name with data[0:5]
2025-01-21 10:43:32,790 - DEBUG - Calling on_field_data with data[6:22]
2025-01-21 10:43:32,790 - DEBUG - Calling on_field_end with no data
2025-01-21 10:43:32,803 - DEBUG - Calling on_end with no data
2025-01-21 10:43:32,806 - DEBUG - Received query: top 10 pasta
2025-01-21 10:43:32,822 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a helpful assistant that extracts structured search parameters.'}, {'role': 'user', 'content': 'Extract structured parameters from the query: top 10 pasta'}], 'model': 'mixtral-8x7b-32768', 'n': 1, 'stop': None, 'stream': False, 'temperature': 1e-08}}
2025-01-21 10:43:32,877 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-01-21 10:43:32,879 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2025-01-21 10:43:32,992 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001C8E5F8CAC0>
2025-01-21 10:43:32,993 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001C8E5F480C0> server_hostname='api.groq.com' timeout=None
2025-01-21 10:43:33,100 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001C8E5F8CA90>
2025-01-21 10:43:33,101 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-21 10:43:33,103 - DEBUG - send_request_headers.complete
2025-01-21 10:43:33,104 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-21 10:43:33,105 - DEBUG - send_request_body.complete
2025-01-21 10:43:33,106 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-21 10:43:33,768 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 21 Jan 2025 05:43:33 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'9054fcbdca57e18f-MRS'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'5000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'4966'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'408ms'), (b'x-request-id', b'req_01jj3p6cxdfvws8eatq3nt2hby'), (b'Set-Cookie', b'__cf_bm=NL_BHUkj7IAz78Qr2ATUsR57juZMb2rXzpfYjBsljLU-1737438213-1.0.1.1-TZ7snDk90tn.CAD9tR4nzW36K5kHVd4f47wadrvK_RAy4tA1hrXVNOD7d5H.hHGGwqt8h8esQLk3W4p0puhVdw; path=/; expires=Tue, 21-Jan-25 06:13:33 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2025-01-21 10:43:33,783 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-01-21 10:43:33,783 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-21 10:43:33,783 - DEBUG - receive_response_body.complete
2025-01-21 10:43:33,783 - DEBUG - response_closed.started
2025-01-21 10:43:33,783 - DEBUG - response_closed.complete
2025-01-21 10:43:33,783 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 21 Jan 2025 05:43:33 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '9054fcbdca57e18f-MRS', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '5000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '4966', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '408ms', 'x-request-id': 'req_01jj3p6cxdfvws8eatq3nt2hby', 'set-cookie': '__cf_bm=NL_BHUkj7IAz78Qr2ATUsR57juZMb2rXzpfYjBsljLU-1737438213-1.0.1.1-TZ7snDk90tn.CAD9tR4nzW36K5kHVd4f47wadrvK_RAy4tA1hrXVNOD7d5H.hHGGwqt8h8esQLk3W4p0puhVdw; path=/; expires=Tue, 21-Jan-25 06:13:33 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2025-01-21 10:43:33,823 - DEBUG - ChatGroq response: Sure, I can help you extract structured search parameters from the query you provided. Here's what I was able to extract:

Parameter: Result limit
Value: 10

Parameter: Search query
Value: pasta

Explanation:

* The parameter "Result limit" indicates that the user wants to see only the top 10 results.
* The parameter "Search query" contains the keyword "pasta" which the user is searching for.

Note that the structure of the search parameters may vary depending on the context and the specific search engine or application being used.
2025-01-21 10:43:33,826 - DEBUG - Raw response: Sure, I can help you extract structured search parameters from the query you provided. Here's what I was able to extract:

Parameter: Result limit
Value: 10

Parameter: Search query
Value: pasta

Explanation:

* The parameter "Result limit" indicates that the user wants to see only the top 10 results.
* The parameter "Search query" contains the keyword "pasta" which the user is searching for.

Note that the structure of the search parameters may vary depending on the context and the specific search engine or application being used.
2025-01-21 10:43:33,834 - ERROR - Error in search endpoint: execute_query() takes 1 positional argument but 2 were given
2025-01-21 10:44:04,174 - DEBUG - close.started
2025-01-21 10:44:04,174 - DEBUG - close.complete
2025-01-21 10:44:14,734 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:44:14,750 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:44:15,300 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:44:15,300 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:44:15,883 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:44:15,886 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:44:16,428 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:44:16,430 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:44:17,014 - DEBUG - Using selector: SelectSelector
2025-01-21 10:44:17,133 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:44:17,133 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:44:17,689 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:44:17,689 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:44:18,269 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:44:18,269 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:44:18,854 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:44:18,856 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:44:32,438 - DEBUG - Calling on_field_start with no data
2025-01-21 10:44:32,439 - DEBUG - Calling on_field_name with data[0:5]
2025-01-21 10:44:32,440 - DEBUG - Calling on_field_data with data[6:22]
2025-01-21 10:44:32,441 - DEBUG - Calling on_field_end with no data
2025-01-21 10:44:32,441 - DEBUG - Calling on_end with no data
2025-01-21 10:44:32,443 - DEBUG - Received query: top 10 pasta
2025-01-21 10:44:32,455 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a helpful assistant that extracts structured search parameters.'}, {'role': 'user', 'content': 'Extract structured parameters from the query: top 10 pasta'}], 'model': 'mixtral-8x7b-32768', 'n': 1, 'stop': None, 'stream': False, 'temperature': 1e-08}}
2025-01-21 10:44:32,480 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-01-21 10:44:32,482 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2025-01-21 10:44:32,585 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000026FCFCECA90>
2025-01-21 10:44:32,585 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000026FCFCA80C0> server_hostname='api.groq.com' timeout=None
2025-01-21 10:44:32,697 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000026FCFCECA60>
2025-01-21 10:44:32,697 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-21 10:44:32,697 - DEBUG - send_request_headers.complete
2025-01-21 10:44:32,697 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-21 10:44:32,713 - DEBUG - send_request_body.complete
2025-01-21 10:44:32,713 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-21 10:44:33,373 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 21 Jan 2025 05:44:32 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'9054fe325c7ae1d4-MRS'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'5000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'4966'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'408ms'), (b'x-request-id', b'req_01jj3p873zf4hb8kpsghp5g2b8'), (b'Set-Cookie', b'__cf_bm=4BTQg1UZvgfPC.xuKt3LjoOjSkb7E_L7V1FHB4h0kDY-1737438272-1.0.1.1-dekTeLHfuMuodYB_p9ptf4hF5dGutatNn_IsDtcHukyQU5orm.np5OVAZE1I86OVNE.P1yEFHxbxb_0mdpGGPA; path=/; expires=Tue, 21-Jan-25 06:14:32 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2025-01-21 10:44:33,373 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-01-21 10:44:33,373 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-21 10:44:33,389 - DEBUG - receive_response_body.complete
2025-01-21 10:44:33,389 - DEBUG - response_closed.started
2025-01-21 10:44:33,389 - DEBUG - response_closed.complete
2025-01-21 10:44:33,389 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 21 Jan 2025 05:44:32 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '9054fe325c7ae1d4-MRS', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '5000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '4966', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '408ms', 'x-request-id': 'req_01jj3p873zf4hb8kpsghp5g2b8', 'set-cookie': '__cf_bm=4BTQg1UZvgfPC.xuKt3LjoOjSkb7E_L7V1FHB4h0kDY-1737438272-1.0.1.1-dekTeLHfuMuodYB_p9ptf4hF5dGutatNn_IsDtcHukyQU5orm.np5OVAZE1I86OVNE.P1yEFHxbxb_0mdpGGPA; path=/; expires=Tue, 21-Jan-25 06:14:32 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2025-01-21 10:44:33,420 - DEBUG - ChatGroq response: Sure, I can help you extract structured search parameters from the query you provided. Here's what I was able to extract:

Parameter: Result limit
Value: 10

Parameter: Search query
Value: pasta

Explanation:

* The parameter "Result limit" indicates that the user wants to see only the top 10 results.
* The parameter "Search query" contains the keyword "pasta" which the user is searching for.

Note that the structure of the search parameters may vary depending on the context and the specific search engine or application being used.
2025-01-21 10:44:33,420 - DEBUG - Raw response: Sure, I can help you extract structured search parameters from the query you provided. Here's what I was able to extract:

Parameter: Result limit
Value: 10

Parameter: Search query
Value: pasta

Explanation:

* The parameter "Result limit" indicates that the user wants to see only the top 10 results.
* The parameter "Search query" contains the keyword "pasta" which the user is searching for.

Note that the structure of the search parameters may vary depending on the context and the specific search engine or application being used.
2025-01-21 10:44:33,435 - ERROR - Error in search endpoint: execute_query() takes 1 positional argument but 2 were given
2025-01-21 10:44:36,652 - DEBUG - Calling on_field_start with no data
2025-01-21 10:44:36,668 - DEBUG - Calling on_field_name with data[0:5]
2025-01-21 10:44:36,668 - DEBUG - Calling on_field_data with data[6:22]
2025-01-21 10:44:36,668 - DEBUG - Calling on_field_end with no data
2025-01-21 10:44:36,668 - DEBUG - Calling on_end with no data
2025-01-21 10:44:36,668 - DEBUG - Received query: top 10 pasta
2025-01-21 10:44:36,678 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a helpful assistant that extracts structured search parameters.'}, {'role': 'user', 'content': 'Extract structured parameters from the query: top 10 pasta'}], 'model': 'mixtral-8x7b-32768', 'n': 1, 'stop': None, 'stream': False, 'temperature': 1e-08}}
2025-01-21 10:44:36,680 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-01-21 10:44:36,681 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-21 10:44:36,683 - DEBUG - send_request_headers.complete
2025-01-21 10:44:36,684 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-21 10:44:36,685 - DEBUG - send_request_body.complete
2025-01-21 10:44:36,686 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-21 10:44:37,342 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 21 Jan 2025 05:44:36 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'9054fe4b2f7fe1d4-MRS'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'5000'), (b'x-ratelimit-remaining-requests', b'14398'), (b'x-ratelimit-remaining-tokens', b'4966'), (b'x-ratelimit-reset-requests', b'8.04s'), (b'x-ratelimit-reset-tokens', b'408ms'), (b'x-request-id', b'req_01jj3p8azrejjbeyy6adab5psd'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2025-01-21 10:44:37,345 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-01-21 10:44:37,346 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-21 10:44:37,348 - DEBUG - receive_response_body.complete
2025-01-21 10:44:37,350 - DEBUG - response_closed.started
2025-01-21 10:44:37,351 - DEBUG - response_closed.complete
2025-01-21 10:44:37,353 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 21 Jan 2025 05:44:36 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '9054fe4b2f7fe1d4-MRS', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '5000', 'x-ratelimit-remaining-requests': '14398', 'x-ratelimit-remaining-tokens': '4966', 'x-ratelimit-reset-requests': '8.04s', 'x-ratelimit-reset-tokens': '408ms', 'x-request-id': 'req_01jj3p8azrejjbeyy6adab5psd', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2025-01-21 10:44:37,365 - DEBUG - ChatGroq response: Sure, I can help you extract structured search parameters from the query you provided. Here's what I was able to extract:

Parameter: Result limit
Value: 10

Parameter: Search query
Value: pasta

Explanation:

* The parameter "Result limit" indicates that the user wants to see only the top 10 results.
* The parameter "Search query" contains the keyword "pasta" which the user is searching for.

Note that the structure of the search parameters may vary depending on the context and the specific search engine or application being used.
2025-01-21 10:44:37,368 - DEBUG - Raw response: Sure, I can help you extract structured search parameters from the query you provided. Here's what I was able to extract:

Parameter: Result limit
Value: 10

Parameter: Search query
Value: pasta

Explanation:

* The parameter "Result limit" indicates that the user wants to see only the top 10 results.
* The parameter "Search query" contains the keyword "pasta" which the user is searching for.

Note that the structure of the search parameters may vary depending on the context and the specific search engine or application being used.
2025-01-21 10:44:37,375 - ERROR - Error in search endpoint: execute_query() takes 1 positional argument but 2 were given
2025-01-21 10:44:55,018 - DEBUG - close.started
2025-01-21 10:44:55,019 - DEBUG - close.complete
2025-01-21 10:45:01,919 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:45:01,919 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:45:02,521 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:45:02,521 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:45:03,076 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:45:03,076 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:45:03,656 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:45:03,656 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:45:04,356 - DEBUG - Using selector: SelectSelector
2025-01-21 10:45:04,473 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:45:04,490 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:45:05,072 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:45:05,088 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:45:05,684 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:45:05,684 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:45:06,249 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:45:06,249 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:45:09,251 - DEBUG - Calling on_field_start with no data
2025-01-21 10:45:09,251 - DEBUG - Calling on_field_name with data[0:5]
2025-01-21 10:45:09,251 - DEBUG - Calling on_field_data with data[6:22]
2025-01-21 10:45:09,251 - DEBUG - Calling on_field_end with no data
2025-01-21 10:45:09,251 - DEBUG - Calling on_end with no data
2025-01-21 10:45:09,251 - DEBUG - Received query: top 10 pasta
2025-01-21 10:45:09,274 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a parameter extraction system for a restaurant search application that handles both English and Hindi/Hinglish queries. For each query, extract key parameters and format them exactly like this example:\n\nParameter: limit\nValue: 10\nDescription: Number of results requested\n\nParameter: dish_type \nValue: biryani\nDescription: Type of dish or cuisine requested\n\nParameter: action\nValue: search\nDescription: Type of action requested\n\nRules:\n1. For number limits (like "top 10"), always use parameter name "limit" with numeric value.\n2. For food items (biryani, dosa etc), always use parameter name "dish_type".\n3. For actions (find, search, batao, dikha etc), always use parameter name "action" with value "search".\n4. For locations (area, jagah etc), use parameter name "location".\n5. Always include descriptions for each parameter.\n6. Format must match the example exactly.\n\nExample inputs and outputs:\n\nInput: "best biryani places in delhi"\nOutput:\nParameter: dish_type\nValue: biryani\nDescription: Type of dish requested\n\nParameter: location\nValue: delhi\nDescription: Search location requested\n\nParameter: action\nValue: search\nDescription: Search action requested\n\nInput: "top 5 dosa ki jagah batao"\nOutput:\nParameter: limit\nValue: 5\nDescription: Number of results requested\n\nParameter: dish_type\nValue: dosa\nDescription: Type of dish requested\n\nParameter: action\nValue: search\nDescription: Search action requested'}, {'role': 'user', 'content': 'Extract parameters from this query: top 10 pasta'}], 'model': 'mixtral-8x7b-32768', 'n': 1, 'stop': None, 'stream': False, 'temperature': 1e-08}}
2025-01-21 10:45:09,310 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-01-21 10:45:09,312 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2025-01-21 10:45:09,445 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001CDCE4B2050>
2025-01-21 10:45:09,446 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001CDCE46C0C0> server_hostname='api.groq.com' timeout=None
2025-01-21 10:45:09,565 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001CDCE4B2020>
2025-01-21 10:45:09,567 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-21 10:45:09,569 - DEBUG - send_request_headers.complete
2025-01-21 10:45:09,569 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-21 10:45:09,570 - DEBUG - send_request_body.complete
2025-01-21 10:45:09,571 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-21 10:45:10,198 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 21 Jan 2025 05:45:09 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'9054ff18bafa0da5-MRS'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'5000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'4609'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'4.692s'), (b'x-request-id', b'req_01jj3p9b4qe8hse960gqf41fj5'), (b'Set-Cookie', b'__cf_bm=1ZWPCSmzQfSq_XOB74RRu0oPl.xDMd16XDylt4Qc1_g-1737438309-1.0.1.1-vOrUEoZ1MB5Xju.uDoxyvhUjdBbTQgfHvFbo58PXvhQ19rE54FlxexkGQUoKiMj7xEgj_dc2NynCoB4uwfct7Q; path=/; expires=Tue, 21-Jan-25 06:15:09 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2025-01-21 10:45:10,198 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-01-21 10:45:10,198 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-21 10:45:10,214 - DEBUG - receive_response_body.complete
2025-01-21 10:45:10,218 - DEBUG - response_closed.started
2025-01-21 10:45:10,220 - DEBUG - response_closed.complete
2025-01-21 10:45:10,224 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 21 Jan 2025 05:45:09 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '9054ff18bafa0da5-MRS', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '5000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '4609', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '4.692s', 'x-request-id': 'req_01jj3p9b4qe8hse960gqf41fj5', 'set-cookie': '__cf_bm=1ZWPCSmzQfSq_XOB74RRu0oPl.xDMd16XDylt4Qc1_g-1737438309-1.0.1.1-vOrUEoZ1MB5Xju.uDoxyvhUjdBbTQgfHvFbo58PXvhQ19rE54FlxexkGQUoKiMj7xEgj_dc2NynCoB4uwfct7Q; path=/; expires=Tue, 21-Jan-25 06:15:09 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2025-01-21 10:45:10,263 - DEBUG - Raw response: Input: "top 10 pasta"
Output:
Parameter: limit
Value: 10
Description: Number of results requested

Parameter: dish_type
Value: pasta
Description: Type of dish requested

Parameter: action
Value: search
Description: Search action requested
2025-01-21 10:45:10,263 - DEBUG - Parsed parameters: [{'parameter': 'limit', 'value': 10, 'description': 'Number of results requested'}, {'parameter': 'action', 'value': 'search', 'description': 'Search action requested'}]
2025-01-21 10:45:10,839 - DEBUG - Building SSL context
2025-01-21 10:45:11,997 - DEBUG - Switching to SSL
2025-01-21 10:45:12,530 - DEBUG - SSL has been enabled
2025-01-21 10:45:12,530 - DEBUG - Starting authorization phase
2025-01-21 10:45:12,530 - DEBUG - The provided initial strategy is mysql_native_password
2025-01-21 10:45:12,530 - INFO - package: mysql.connector.plugins
2025-01-21 10:45:12,546 - INFO - plugin_name: mysql_native_password
2025-01-21 10:45:12,546 - INFO - AUTHENTICATION_PLUGIN_CLASS: MySQLNativePasswordAuthPlugin
2025-01-21 10:45:12,920 - DEBUG - Server's response is an auth switch request
2025-01-21 10:45:12,920 - DEBUG - Switching to strategy caching_sha2_password
2025-01-21 10:45:12,920 - INFO - package: mysql.connector.plugins
2025-01-21 10:45:12,936 - INFO - plugin_name: caching_sha2_password
2025-01-21 10:45:12,936 - INFO - AUTHENTICATION_PLUGIN_CLASS: MySQLCachingSHA2PasswordAuthPlugin
2025-01-21 10:45:12,936 - DEBUG - # request: b'P\x11Gr&z\xcfh`\xcf\x94\xff]e%H\xebe\xc9\xa3\xc7\x9e\xe8\xafl\xa7\xfaw\xa6\r\xf7\x02' size: 32
2025-01-21 10:45:13,195 - DEBUG - # server response packet: b'\x02\x00\x00\x05\x01\x03'
2025-01-21 10:45:13,195 - DEBUG - Exchanging further packets
2025-01-21 10:45:13,195 - DEBUG - caching_sha2_password completed succesfully
2025-01-21 10:45:14,004 - DEBUG - Executing SQL: 
            SELECT r.name AS restaurant_name, d.dish_name, d.price, d.popularity_score
            FROM Dishes d
            JOIN Restaurants r ON d.restaurant_id = r.restaurant_id
             LIMIT 10
2025-01-21 10:45:14,004 - DEBUG - With parameters: []
2025-01-21 10:45:42,766 - DEBUG - close.started
2025-01-21 10:45:42,766 - DEBUG - close.complete
2025-01-21 10:45:49,961 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:45:49,961 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:45:50,577 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:45:50,577 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:45:51,267 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:45:51,270 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:45:51,925 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:45:51,927 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:45:52,512 - DEBUG - Using selector: SelectSelector
2025-01-21 10:45:52,630 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:45:52,630 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:45:53,245 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:45:53,245 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:45:53,983 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:45:53,983 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:45:54,691 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:45:54,694 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:45:55,338 - DEBUG - Calling on_field_start with no data
2025-01-21 10:45:55,338 - DEBUG - Calling on_field_name with data[0:5]
2025-01-21 10:45:55,338 - DEBUG - Calling on_field_data with data[6:22]
2025-01-21 10:45:55,341 - DEBUG - Calling on_field_end with no data
2025-01-21 10:45:55,342 - DEBUG - Calling on_end with no data
2025-01-21 10:45:55,344 - DEBUG - Received query: top 10 pasta
2025-01-21 10:45:55,356 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a parameter extraction system for a restaurant search application that handles both English and Hindi/Hinglish queries. For each query, extract key parameters and format them exactly like this example:\n\nParameter: limit\nValue: 10\nDescription: Number of results requested\n\nParameter: dish_type \nValue: biryani\nDescription: Type of dish or cuisine requested\n\nParameter: action\nValue: search\nDescription: Type of action requested\n\nRules:\n1. For number limits (like "top 10"), always use parameter name "limit" with numeric value.\n2. For food items (biryani, dosa etc), always use parameter name "dish_type".\n3. For actions (find, search, batao, dikha etc), always use parameter name "action" with value "search".\n4. For locations (area, jagah etc), use parameter name "location".\n5. Always include descriptions for each parameter.\n6. Format must match the example exactly.\n\nExample inputs and outputs:\n\nInput: "best biryani places in delhi"\nOutput:\nParameter: dish_type\nValue: biryani\nDescription: Type of dish requested\n\nParameter: location\nValue: delhi\nDescription: Search location requested\n\nParameter: action\nValue: search\nDescription: Search action requested\n\nInput: "top 5 dosa ki jagah batao"\nOutput:\nParameter: limit\nValue: 5\nDescription: Number of results requested\n\nParameter: dish_type\nValue: dosa\nDescription: Type of dish requested\n\nParameter: action\nValue: search\nDescription: Search action requested'}, {'role': 'user', 'content': 'Extract parameters from this query: top 10 pasta'}], 'model': 'mixtral-8x7b-32768', 'n': 1, 'stop': None, 'stream': False, 'temperature': 1e-08}}
2025-01-21 10:45:55,384 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-01-21 10:45:55,390 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2025-01-21 10:45:55,502 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000189EAC0CAF0>
2025-01-21 10:45:55,517 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000189EAB0BD40> server_hostname='api.groq.com' timeout=None
2025-01-21 10:45:55,637 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000189EAC0CAC0>
2025-01-21 10:45:55,637 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-21 10:45:55,653 - DEBUG - send_request_headers.complete
2025-01-21 10:45:55,653 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-21 10:45:55,653 - DEBUG - send_request_body.complete
2025-01-21 10:45:55,658 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-21 10:45:56,254 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 21 Jan 2025 05:45:55 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'90550038ce53e1e5-MRS'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'5000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'4609'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'4.692s'), (b'x-request-id', b'req_01jj3par3pfwgbec65bvrpf8g4'), (b'Set-Cookie', b'__cf_bm=DBQoN2yrEol35MKIqdb1Ey4gxBJn_JOmvCMJn0F0j0s-1737438355-1.0.1.1-04eegn1PDUE.goEOm47HjEWv2U7p_GYLUNvLp8ggyYI6I86FyA33mkPK1JPHpJq4jul8CvDp1FGpEfDSltjKUA; path=/; expires=Tue, 21-Jan-25 06:15:55 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2025-01-21 10:45:56,254 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-01-21 10:45:56,254 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-21 10:45:56,267 - DEBUG - receive_response_body.complete
2025-01-21 10:45:56,269 - DEBUG - response_closed.started
2025-01-21 10:45:56,273 - DEBUG - response_closed.complete
2025-01-21 10:45:56,274 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 21 Jan 2025 05:45:55 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '90550038ce53e1e5-MRS', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '5000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '4609', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '4.692s', 'x-request-id': 'req_01jj3par3pfwgbec65bvrpf8g4', 'set-cookie': '__cf_bm=DBQoN2yrEol35MKIqdb1Ey4gxBJn_JOmvCMJn0F0j0s-1737438355-1.0.1.1-04eegn1PDUE.goEOm47HjEWv2U7p_GYLUNvLp8ggyYI6I86FyA33mkPK1JPHpJq4jul8CvDp1FGpEfDSltjKUA; path=/; expires=Tue, 21-Jan-25 06:15:55 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2025-01-21 10:45:56,305 - DEBUG - Raw response: Input: "top 10 pasta"
Output:
Parameter: limit
Value: 10
Description: Number of results requested

Parameter: dish_type
Value: pasta
Description: Type of dish requested

Parameter: action
Value: search
Description: Search action requested
2025-01-21 10:45:56,322 - DEBUG - Parsed parameters: [{'parameter': 'limit', 'value': 10, 'description': 'Number of results requested'}, {'parameter': 'action', 'value': 'search', 'description': 'Search action requested'}]
2025-01-21 10:45:57,239 - DEBUG - Building SSL context
2025-01-21 10:45:58,569 - DEBUG - Switching to SSL
2025-01-21 10:45:59,103 - DEBUG - SSL has been enabled
2025-01-21 10:45:59,103 - DEBUG - Starting authorization phase
2025-01-21 10:45:59,103 - DEBUG - The provided initial strategy is mysql_native_password
2025-01-21 10:45:59,103 - INFO - package: mysql.connector.plugins
2025-01-21 10:45:59,103 - INFO - plugin_name: mysql_native_password
2025-01-21 10:45:59,123 - INFO - AUTHENTICATION_PLUGIN_CLASS: MySQLNativePasswordAuthPlugin
2025-01-21 10:45:59,476 - DEBUG - Server's response is an auth switch request
2025-01-21 10:45:59,476 - DEBUG - Switching to strategy caching_sha2_password
2025-01-21 10:45:59,476 - INFO - package: mysql.connector.plugins
2025-01-21 10:45:59,492 - INFO - plugin_name: caching_sha2_password
2025-01-21 10:45:59,492 - INFO - AUTHENTICATION_PLUGIN_CLASS: MySQLCachingSHA2PasswordAuthPlugin
2025-01-21 10:45:59,492 - DEBUG - # request: b'0\xafQ\xe9\x0c\xb4\xebz\xb2-\xaf-\xd1\x81\x07\x1a|\x14\x1b\t\x89{W0\x98\xaa\xa4\xcc\xb4\x99\xbb\xa9' size: 32
2025-01-21 10:45:59,753 - DEBUG - # server response packet: b'\x02\x00\x00\x05\x01\x03'
2025-01-21 10:45:59,753 - DEBUG - Exchanging further packets
2025-01-21 10:45:59,754 - DEBUG - caching_sha2_password completed succesfully
2025-01-21 10:46:00,527 - DEBUG - Executing SQL: 
            SELECT r.name AS restaurant_name, d.dish_name, d.price, d.popularity_score
            FROM Dishes d
            JOIN Restaurants r ON d.restaurant_id = r.restaurant_id
             LIMIT 10
2025-01-21 10:46:00,542 - DEBUG - With parameters: []
2025-01-21 10:49:14,079 - DEBUG - close.started
2025-01-21 10:49:14,090 - DEBUG - close.complete
2025-01-21 10:49:19,789 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:49:19,789 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:49:20,347 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:49:20,347 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:49:20,924 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:49:20,924 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:49:21,500 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:49:21,502 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:49:22,178 - DEBUG - Using selector: SelectSelector
2025-01-21 10:49:22,305 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:49:22,305 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:49:22,879 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:49:22,879 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:49:23,479 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:49:23,479 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:49:24,094 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:49:24,097 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:49:27,569 - DEBUG - Calling on_field_start with no data
2025-01-21 10:49:27,569 - DEBUG - Calling on_field_name with data[0:5]
2025-01-21 10:49:27,569 - DEBUG - Calling on_field_data with data[6:22]
2025-01-21 10:49:27,569 - DEBUG - Calling on_field_end with no data
2025-01-21 10:49:27,569 - DEBUG - Calling on_end with no data
2025-01-21 10:49:27,569 - DEBUG - Received query: top 10 pasta
2025-01-21 10:49:27,591 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a parameter extraction system for a restaurant search application that handles both English and Hindi/Hinglish queries. For each query, extract key parameters and format them exactly like this example:\n\nParameter: limit\nValue: 10\nDescription: Number of results requested\n\nParameter: dish_type \nValue: biryani\nDescription: Type of dish or cuisine requested\n\nParameter: action\nValue: search\nDescription: Type of action requested\n\nRules:\n1. For number limits (like "top 10"), always use parameter name "limit" with numeric value.\n2. For food items (biryani, dosa etc), always use parameter name "dish_type".\n3. For actions (find, search, batao, dikha etc), always use parameter name "action" with value "search".\n4. For locations (area, jagah etc), use parameter name "location".\n5. Always include descriptions for each parameter.\n6. Format must match the example exactly.\n\nExample inputs and outputs:\n\nInput: "best biryani places in delhi"\nOutput:\nParameter: dish_type\nValue: biryani\nDescription: Type of dish requested\n\nParameter: location\nValue: delhi\nDescription: Search location requested\n\nParameter: action\nValue: search\nDescription: Search action requested\n\nInput: "top 5 dosa ki jagah batao"\nOutput:\nParameter: limit\nValue: 5\nDescription: Number of results requested\n\nParameter: dish_type\nValue: dosa\nDescription: Type of dish requested\n\nParameter: action\nValue: search\nDescription: Search action requested'}, {'role': 'user', 'content': 'Extract parameters from this query: top 10 pasta'}], 'model': 'mixtral-8x7b-32768', 'n': 1, 'stop': None, 'stream': False, 'temperature': 1e-08}}
2025-01-21 10:49:27,622 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-01-21 10:49:27,622 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2025-01-21 10:49:27,735 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001F0DC37CA90>
2025-01-21 10:49:27,751 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001F0DC32C640> server_hostname='api.groq.com' timeout=None
2025-01-21 10:49:27,868 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001F0DC37CA60>
2025-01-21 10:49:27,868 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-21 10:49:27,868 - DEBUG - send_request_headers.complete
2025-01-21 10:49:27,868 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-21 10:49:27,868 - DEBUG - send_request_body.complete
2025-01-21 10:49:27,884 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-21 10:49:28,468 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 21 Jan 2025 05:49:28 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'905505674b50e17f-MRS'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'5000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'4609'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'4.692s'), (b'x-request-id', b'req_01jj3ph7c2ekha76bb6zyysgtx'), (b'Set-Cookie', b'__cf_bm=a5Hzqt7lDVpSeUYMsSWLJrHtSDAfG_BwKWYITDdqY6k-1737438568-1.0.1.1-w2zH8Zerlc9IJRhiygqqxsRpsj3cWUjSUR3rYPcsl2_Guq.m6o4CjlrLUfv1.zowhyT8vzjHDV4lMYSoenn3Fg; path=/; expires=Tue, 21-Jan-25 06:19:28 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2025-01-21 10:49:28,492 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-01-21 10:49:28,493 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-21 10:49:28,495 - DEBUG - receive_response_body.complete
2025-01-21 10:49:28,496 - DEBUG - response_closed.started
2025-01-21 10:49:28,497 - DEBUG - response_closed.complete
2025-01-21 10:49:28,499 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 21 Jan 2025 05:49:28 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '905505674b50e17f-MRS', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '5000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '4609', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '4.692s', 'x-request-id': 'req_01jj3ph7c2ekha76bb6zyysgtx', 'set-cookie': '__cf_bm=a5Hzqt7lDVpSeUYMsSWLJrHtSDAfG_BwKWYITDdqY6k-1737438568-1.0.1.1-w2zH8Zerlc9IJRhiygqqxsRpsj3cWUjSUR3rYPcsl2_Guq.m6o4CjlrLUfv1.zowhyT8vzjHDV4lMYSoenn3Fg; path=/; expires=Tue, 21-Jan-25 06:19:28 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2025-01-21 10:49:28,661 - DEBUG - Raw response: Input: "top 10 pasta"
Output:
Parameter: limit
Value: 10
Description: Number of results requested

Parameter: dish_type
Value: pasta
Description: Type of dish requested

Parameter: action
Value: search
Description: Search action requested
2025-01-21 10:49:28,691 - DEBUG - Parsed parameters: [{'parameter': 'limit', 'value': 10, 'description': 'Number of results requested'}, {'parameter': 'action', 'value': 'search', 'description': 'Search action requested'}]
2025-01-21 10:49:29,334 - DEBUG - Building SSL context
2025-01-21 10:49:30,622 - DEBUG - Switching to SSL
2025-01-21 10:49:31,157 - DEBUG - SSL has been enabled
2025-01-21 10:49:31,172 - DEBUG - Starting authorization phase
2025-01-21 10:49:31,173 - DEBUG - The provided initial strategy is mysql_native_password
2025-01-21 10:49:31,173 - INFO - package: mysql.connector.plugins
2025-01-21 10:49:31,173 - INFO - plugin_name: mysql_native_password
2025-01-21 10:49:31,182 - INFO - AUTHENTICATION_PLUGIN_CLASS: MySQLNativePasswordAuthPlugin
2025-01-21 10:49:31,541 - DEBUG - Server's response is an auth switch request
2025-01-21 10:49:31,541 - DEBUG - Switching to strategy caching_sha2_password
2025-01-21 10:49:31,541 - INFO - package: mysql.connector.plugins
2025-01-21 10:49:31,541 - INFO - plugin_name: caching_sha2_password
2025-01-21 10:49:31,541 - INFO - AUTHENTICATION_PLUGIN_CLASS: MySQLCachingSHA2PasswordAuthPlugin
2025-01-21 10:49:31,556 - DEBUG - # request: b'!0\xf2t\x84\x95o~\x01V\x8b\xa6\xf6\x81\xca\xb4\x8c\x0c?q9\x9f\xe3\x80\xbf\xf8\xe4\xbf\xfe\xc2R\xce' size: 32
2025-01-21 10:49:31,824 - DEBUG - # server response packet: b'\x02\x00\x00\x05\x01\x03'
2025-01-21 10:49:31,824 - DEBUG - Exchanging further packets
2025-01-21 10:49:31,824 - DEBUG - caching_sha2_password completed succesfully
2025-01-21 10:49:32,593 - DEBUG - Executing SQL: 
            SELECT r.name AS restaurant_name, d.dish_name, d.price, d.popularity_score
            FROM Dishes d
            JOIN Restaurants r ON d.restaurant_id = r.restaurant_id
             LIMIT 10
2025-01-21 10:49:32,593 - DEBUG - With parameters: []
2025-01-21 10:54:23,708 - DEBUG - close.started
2025-01-21 10:54:23,708 - DEBUG - close.complete
2025-01-21 10:54:29,661 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:54:29,661 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:54:30,301 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:54:30,303 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:54:30,880 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:54:30,880 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:54:31,461 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:54:31,461 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:54:32,064 - DEBUG - Using selector: SelectSelector
2025-01-21 10:54:32,198 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:54:32,198 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:54:32,784 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:54:32,784 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:54:33,509 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:54:33,509 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:54:34,162 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:54:34,164 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:54:36,730 - DEBUG - Calling on_field_start with no data
2025-01-21 10:54:36,747 - DEBUG - Calling on_field_name with data[0:5]
2025-01-21 10:54:36,747 - DEBUG - Calling on_field_data with data[6:22]
2025-01-21 10:54:36,747 - DEBUG - Calling on_field_end with no data
2025-01-21 10:54:36,747 - DEBUG - Calling on_end with no data
2025-01-21 10:54:36,747 - DEBUG - Received query: top 10 pasta
2025-01-21 10:54:36,770 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a parameter extraction system for a restaurant search application that handles both English and Hindi/Hinglish queries. For each query, extract key parameters and format them exactly like this example:\n\nParameter: limit\nValue: 10\nDescription: Number of results requested\n\nParameter: dish_type \nValue: biryani\nDescription: Type of dish or cuisine requested\n\nParameter: action\nValue: search\nDescription: Type of action requested\n\nRules:\n1. For number limits (like "top 10"), always use parameter name "limit" with numeric value.\n2. For food items (biryani, dosa etc), always use parameter name "dish_type".\n3. For actions (find, search, batao, dikha etc), always use parameter name "action" with value "search".\n4. For locations (area, jagah etc), use parameter name "location".\n5. Always include descriptions for each parameter.\n6. Format must match the example exactly.\n\nExample inputs and outputs:\n\nInput: "best biryani places in delhi"\nOutput:\nParameter: dish_type\nValue: biryani\nDescription: Type of dish requested\n\nParameter: location\nValue: delhi\nDescription: Search location requested\n\nParameter: action\nValue: search\nDescription: Search action requested\n\nInput: "top 5 dosa ki jagah batao"\nOutput:\nParameter: limit\nValue: 5\nDescription: Number of results requested\n\nParameter: dish_type\nValue: dosa\nDescription: Type of dish requested\n\nParameter: action\nValue: search\nDescription: Search action requested'}, {'role': 'user', 'content': 'Extract parameters from this query: top 10 pasta'}], 'model': 'mixtral-8x7b-32768', 'n': 1, 'stop': None, 'stream': False, 'temperature': 1e-08}}
2025-01-21 10:54:36,848 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-01-21 10:54:36,848 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2025-01-21 10:54:37,213 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002282F11CAC0>
2025-01-21 10:54:37,213 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000002282F0CC740> server_hostname='api.groq.com' timeout=None
2025-01-21 10:54:37,347 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002282F11CA90>
2025-01-21 10:54:37,347 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-21 10:54:37,347 - DEBUG - send_request_headers.complete
2025-01-21 10:54:37,347 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-21 10:54:37,347 - DEBUG - send_request_body.complete
2025-01-21 10:54:37,347 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-21 10:54:37,965 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 21 Jan 2025 05:54:37 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'90550cf578bbe161-MRS'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'5000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'4609'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'4.692s'), (b'x-request-id', b'req_01jj3ptnejevb94k5tqa7vm8t3'), (b'Set-Cookie', b'__cf_bm=D88ANyuKdhRsheItjyIW.pKViJoCr2_CnqNy9YIiBY0-1737438877-1.0.1.1-VhA5yv1KoBW2TDkIwiDNX4Nufz1Vlb.zDqJN1N_q3gpkIFZ0ull4Y7tvFrL5H3opvId55lPTvGDphyZCtj9MuQ; path=/; expires=Tue, 21-Jan-25 06:24:37 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2025-01-21 10:54:37,965 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-01-21 10:54:37,965 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-21 10:54:37,978 - DEBUG - receive_response_body.complete
2025-01-21 10:54:37,983 - DEBUG - response_closed.started
2025-01-21 10:54:37,985 - DEBUG - response_closed.complete
2025-01-21 10:54:37,987 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 21 Jan 2025 05:54:37 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '90550cf578bbe161-MRS', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '5000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '4609', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '4.692s', 'x-request-id': 'req_01jj3ptnejevb94k5tqa7vm8t3', 'set-cookie': '__cf_bm=D88ANyuKdhRsheItjyIW.pKViJoCr2_CnqNy9YIiBY0-1737438877-1.0.1.1-VhA5yv1KoBW2TDkIwiDNX4Nufz1Vlb.zDqJN1N_q3gpkIFZ0ull4Y7tvFrL5H3opvId55lPTvGDphyZCtj9MuQ; path=/; expires=Tue, 21-Jan-25 06:24:37 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2025-01-21 10:54:38,033 - DEBUG - Raw response: Input: "top 10 pasta"
Output:
Parameter: limit
Value: 10
Description: Number of results requested

Parameter: dish_type
Value: pasta
Description: Type of dish requested

Parameter: action
Value: search
Description: Search action requested
2025-01-21 10:54:38,033 - DEBUG - Parsed parameters: [{'parameter': 'limit', 'value': 10, 'description': 'Number of results requested'}, {'parameter': 'action', 'value': 'search', 'description': 'Search action requested'}]
2025-01-21 10:54:38,851 - DEBUG - Building SSL context
2025-01-21 10:54:40,117 - DEBUG - Switching to SSL
2025-01-21 10:54:40,636 - DEBUG - SSL has been enabled
2025-01-21 10:54:40,636 - DEBUG - Starting authorization phase
2025-01-21 10:54:40,636 - DEBUG - The provided initial strategy is mysql_native_password
2025-01-21 10:54:40,652 - INFO - package: mysql.connector.plugins
2025-01-21 10:54:40,652 - INFO - plugin_name: mysql_native_password
2025-01-21 10:54:40,658 - INFO - AUTHENTICATION_PLUGIN_CLASS: MySQLNativePasswordAuthPlugin
2025-01-21 10:54:41,020 - DEBUG - Server's response is an auth switch request
2025-01-21 10:54:41,020 - DEBUG - Switching to strategy caching_sha2_password
2025-01-21 10:54:41,020 - INFO - package: mysql.connector.plugins
2025-01-21 10:54:41,020 - INFO - plugin_name: caching_sha2_password
2025-01-21 10:54:41,020 - INFO - AUTHENTICATION_PLUGIN_CLASS: MySQLCachingSHA2PasswordAuthPlugin
2025-01-21 10:54:41,020 - DEBUG - # request: b'>\xe01\xe9p\xa4}\xbb@)\x06\xe7\xa52\n`\xb7\n\x11%\xcd\x7fL\xf9\xe5\x15\n\xe1\xc8\xe5T\xb3' size: 32
2025-01-21 10:54:41,286 - DEBUG - # server response packet: b'\x02\x00\x00\x05\x01\x03'
2025-01-21 10:54:41,287 - DEBUG - Exchanging further packets
2025-01-21 10:54:41,287 - DEBUG - caching_sha2_password completed succesfully
2025-01-21 10:54:42,066 - DEBUG - Executing SQL: 
            SELECT r.name AS restaurant_name, d.dish_name, d.price, d.popularity_score
            FROM Dishes d
            JOIN Restaurants r ON d.restaurant_id = r.restaurant_id
             LIMIT 10
2025-01-21 10:54:42,072 - DEBUG - With parameters: []
2025-01-21 10:56:13,028 - DEBUG - close.started
2025-01-21 10:56:13,028 - DEBUG - close.complete
2025-01-21 10:56:19,717 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:56:19,717 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:56:20,358 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:56:20,376 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:56:21,162 - DEBUG - Using selector: SelectSelector
2025-01-21 10:56:21,331 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:56:21,334 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:56:21,969 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:56:21,985 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:56:22,713 - DEBUG - Calling on_field_start with no data
2025-01-21 10:56:22,713 - DEBUG - Calling on_field_name with data[0:5]
2025-01-21 10:56:22,713 - DEBUG - Calling on_field_data with data[6:22]
2025-01-21 10:56:22,713 - DEBUG - Calling on_field_end with no data
2025-01-21 10:56:22,713 - DEBUG - Calling on_end with no data
2025-01-21 10:56:22,713 - DEBUG - Received query: top 10 pasta
2025-01-21 10:56:22,738 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a parameter extraction system for a restaurant search application that handles both English and Hindi/Hinglish queries. For each query, extract key parameters and format them exactly like this example:\n\nParameter: limit\nValue: 10\nDescription: Number of results requested\n\nParameter: dish_type \nValue: biryani\nDescription: Type of dish or cuisine requested\n\nParameter: action\nValue: search\nDescription: Type of action requested\n\nRules:\n1. For number limits (like "top 10"), always use parameter name "limit" with numeric value.\n2. For food items (biryani, dosa etc), always use parameter name "dish_type".\n3. For actions (find, search, batao, dikha etc), always use parameter name "action" with value "search".\n4. For locations (area, jagah etc), use parameter name "location".\n5. Always include descriptions for each parameter.\n6. Format must match the example exactly.\n\nExample inputs and outputs:\n\nInput: "best biryani places in delhi"\nOutput:\nParameter: dish_type\nValue: biryani\nDescription: Type of dish requested\n\nParameter: location\nValue: delhi\nDescription: Search location requested\n\nParameter: action\nValue: search\nDescription: Search action requested\n\nInput: "top 5 dosa ki jagah batao"\nOutput:\nParameter: limit\nValue: 5\nDescription: Number of results requested\n\nParameter: dish_type\nValue: dosa\nDescription: Type of dish requested\n\nParameter: action\nValue: search\nDescription: Search action requested'}, {'role': 'user', 'content': 'Extract parameters from this query: top 10 pasta'}], 'model': 'llama3.3-70b-versatile', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.2}}
2025-01-21 10:56:22,765 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-01-21 10:56:22,765 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2025-01-21 10:56:22,886 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000202FD8A15D0>
2025-01-21 10:56:22,887 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000202FD79FDC0> server_hostname='api.groq.com' timeout=None
2025-01-21 10:56:22,993 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000202FD8A15A0>
2025-01-21 10:56:22,993 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-21 10:56:22,993 - DEBUG - send_request_headers.complete
2025-01-21 10:56:22,993 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-21 10:56:22,993 - DEBUG - send_request_body.complete
2025-01-21 10:56:22,993 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-21 10:56:23,245 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 404, b'Not Found', [(b'Date', b'Tue, 21 Jan 2025 05:56:22 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'90550f89cb98077a-MRS'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'x-groq-region', b'me-central-1'), (b'x-request-id', b'req_01jj3pxwkxeysb0v7nkxc711v0'), (b'Set-Cookie', b'__cf_bm=4qjP2cf6tN0EeutUFOMhXuBH3Q6FYH7C9.UrhsYEwnI-1737438982-1.0.1.1-uyrOR.heklCy_xgFkgM1YjbCBELKNPCJn6K47mSibveqoSWlp3ILOQYb8JecXRaok9QzmemTPQKvmWK8mulavw; path=/; expires=Tue, 21-Jan-25 06:26:22 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-01-21 10:56:23,245 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 404 Not Found"
2025-01-21 10:56:23,261 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-21 10:56:23,265 - DEBUG - receive_response_body.complete
2025-01-21 10:56:23,266 - DEBUG - response_closed.started
2025-01-21 10:56:23,267 - DEBUG - response_closed.complete
2025-01-21 10:56:23,269 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "404 Not Found" Headers({'date': 'Tue, 21 Jan 2025 05:56:22 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '90550f89cb98077a-MRS', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'x-groq-region': 'me-central-1', 'x-request-id': 'req_01jj3pxwkxeysb0v7nkxc711v0', 'set-cookie': '__cf_bm=4qjP2cf6tN0EeutUFOMhXuBH3Q6FYH7C9.UrhsYEwnI-1737438982-1.0.1.1-uyrOR.heklCy_xgFkgM1YjbCBELKNPCJn6K47mSibveqoSWlp3ILOQYb8JecXRaok9QzmemTPQKvmWK8mulavw; path=/; expires=Tue, 21-Jan-25 06:26:22 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-01-21 10:56:23,273 - DEBUG - Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "C:\Users\as\anaconda3\envs\RAG\lib\site-packages\groq\_base_client.py", line 1035, in _request
    response.raise_for_status()
  File "C:\Users\as\anaconda3\envs\RAG\lib\site-packages\httpx\_models.py", line 763, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '404 Not Found' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/404
2025-01-21 10:56:23,288 - DEBUG - Not retrying
2025-01-21 10:56:23,288 - DEBUG - Re-raising status error
2025-01-21 10:56:23,289 - ERROR - Error in search endpoint: Error code: 404 - {'error': {'message': 'The model `llama3.3-70b-versatile` does not exist or you do not have access to it.', 'type': 'invalid_request_error', 'code': 'model_not_found'}}
Traceback (most recent call last):
  File "c:\Users\as\Coach\app.py", line 202, in search
    ai_msg = llm.invoke(messages)
  File "C:\Users\as\anaconda3\envs\RAG\lib\site-packages\langchain_core\language_models\chat_models.py", line 286, in invoke
    self.generate_prompt(
  File "C:\Users\as\anaconda3\envs\RAG\lib\site-packages\langchain_core\language_models\chat_models.py", line 786, in generate_prompt
    return self.generate(prompt_messages, stop=stop, callbacks=callbacks, **kwargs)
  File "C:\Users\as\anaconda3\envs\RAG\lib\site-packages\langchain_core\language_models\chat_models.py", line 643, in generate
    raise e
  File "C:\Users\as\anaconda3\envs\RAG\lib\site-packages\langchain_core\language_models\chat_models.py", line 633, in generate
    self._generate_with_cache(
  File "C:\Users\as\anaconda3\envs\RAG\lib\site-packages\langchain_core\language_models\chat_models.py", line 851, in _generate_with_cache
    result = self._generate(
  File "C:\Users\as\anaconda3\envs\RAG\lib\site-packages\langchain_groq\chat_models.py", line 474, in _generate
    response = self.client.create(messages=message_dicts, **params)
  File "C:\Users\as\anaconda3\envs\RAG\lib\site-packages\groq\resources\chat\completions.py", line 298, in create
    return self._post(
  File "C:\Users\as\anaconda3\envs\RAG\lib\site-packages\groq\_base_client.py", line 1261, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
  File "C:\Users\as\anaconda3\envs\RAG\lib\site-packages\groq\_base_client.py", line 953, in request
    return self._request(
  File "C:\Users\as\anaconda3\envs\RAG\lib\site-packages\groq\_base_client.py", line 1056, in _request
    raise self._make_status_error_from_response(err.response) from None
groq.NotFoundError: Error code: 404 - {'error': {'message': 'The model `llama3.3-70b-versatile` does not exist or you do not have access to it.', 'type': 'invalid_request_error', 'code': 'model_not_found'}}
2025-01-21 10:57:03,087 - DEBUG - close.started
2025-01-21 10:57:03,087 - DEBUG - close.complete
2025-01-21 10:57:09,490 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:57:09,490 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:57:10,148 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:57:10,165 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:57:10,833 - DEBUG - Using selector: SelectSelector
2025-01-21 10:57:10,966 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:57:10,966 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:57:11,585 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 10:57:11,585 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 10:57:12,263 - DEBUG - Calling on_field_start with no data
2025-01-21 10:57:12,264 - DEBUG - Calling on_field_name with data[0:5]
2025-01-21 10:57:12,265 - DEBUG - Calling on_field_data with data[6:22]
2025-01-21 10:57:12,266 - DEBUG - Calling on_field_end with no data
2025-01-21 10:57:12,267 - DEBUG - Calling on_end with no data
2025-01-21 10:57:12,270 - DEBUG - Received query: top 10 pasta
2025-01-21 10:57:12,287 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a parameter extraction system for a restaurant search application that handles both English and Hindi/Hinglish queries. For each query, extract key parameters and format them exactly like this example:\n\nParameter: limit\nValue: 10\nDescription: Number of results requested\n\nParameter: dish_type \nValue: biryani\nDescription: Type of dish or cuisine requested\n\nParameter: action\nValue: search\nDescription: Type of action requested\n\nRules:\n1. For number limits (like "top 10"), always use parameter name "limit" with numeric value.\n2. For food items (biryani, dosa etc), always use parameter name "dish_type".\n3. For actions (find, search, batao, dikha etc), always use parameter name "action" with value "search".\n4. For locations (area, jagah etc), use parameter name "location".\n5. Always include descriptions for each parameter.\n6. Format must match the example exactly.\n\nExample inputs and outputs:\n\nInput: "best biryani places in delhi"\nOutput:\nParameter: dish_type\nValue: biryani\nDescription: Type of dish requested\n\nParameter: location\nValue: delhi\nDescription: Search location requested\n\nParameter: action\nValue: search\nDescription: Search action requested\n\nInput: "top 5 dosa ki jagah batao"\nOutput:\nParameter: limit\nValue: 5\nDescription: Number of results requested\n\nParameter: dish_type\nValue: dosa\nDescription: Type of dish requested\n\nParameter: action\nValue: search\nDescription: Search action requested'}, {'role': 'user', 'content': 'Extract parameters from this query: top 10 pasta'}], 'model': 'llama-3.3-70b-versatile', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.2}}
2025-01-21 10:57:12,316 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-01-21 10:57:12,318 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2025-01-21 10:57:12,438 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000020D26D05570>
2025-01-21 10:57:12,439 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000020D26BFFDC0> server_hostname='api.groq.com' timeout=None
2025-01-21 10:57:12,554 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000020D26D05540>
2025-01-21 10:57:12,554 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-21 10:57:12,554 - DEBUG - send_request_headers.complete
2025-01-21 10:57:12,554 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-21 10:57:12,570 - DEBUG - send_request_body.complete
2025-01-21 10:57:12,570 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-21 10:57:13,339 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 21 Jan 2025 05:57:12 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'905510bf8ebb73cf-MRS'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'5624'), (b'x-ratelimit-reset-requests', b'1m26.4s'), (b'x-ratelimit-reset-tokens', b'3.76s'), (b'x-request-id', b'req_01jj3pzd1pe13vkamarx78436z'), (b'Set-Cookie', b'__cf_bm=sbKYlASbdTz2qtzt6MRWeW4LQjp0Z9Lylj4unqraVo8-1737439032-1.0.1.1-Uwa8gQmm8dpY.20xLPZvw3s8GRvhUXnxq_mw50Q9AuUSMTjGcC7BLz.bvwpN7ctnabqHaS8w77UcqzmNj9G6LA; path=/; expires=Tue, 21-Jan-25 06:27:12 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2025-01-21 10:57:13,339 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-01-21 10:57:13,339 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-21 10:57:13,352 - DEBUG - receive_response_body.complete
2025-01-21 10:57:13,353 - DEBUG - response_closed.started
2025-01-21 10:57:13,356 - DEBUG - response_closed.complete
2025-01-21 10:57:13,358 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 21 Jan 2025 05:57:12 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '905510bf8ebb73cf-MRS', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-region': 'us-west-1', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '999', 'x-ratelimit-remaining-tokens': '5624', 'x-ratelimit-reset-requests': '1m26.4s', 'x-ratelimit-reset-tokens': '3.76s', 'x-request-id': 'req_01jj3pzd1pe13vkamarx78436z', 'set-cookie': '__cf_bm=sbKYlASbdTz2qtzt6MRWeW4LQjp0Z9Lylj4unqraVo8-1737439032-1.0.1.1-Uwa8gQmm8dpY.20xLPZvw3s8GRvhUXnxq_mw50Q9AuUSMTjGcC7BLz.bvwpN7ctnabqHaS8w77UcqzmNj9G6LA; path=/; expires=Tue, 21-Jan-25 06:27:12 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2025-01-21 10:57:13,389 - DEBUG - Raw response: Parameter: limit
Value: 10
Description: Number of results requested

Parameter: dish_type
Value: pasta
Description: Type of dish requested

Parameter: action
Value: search
Description: Type of action requested
2025-01-21 10:57:13,389 - DEBUG - Parsed parameters: [{'parameter': 'action', 'value': 'search', 'description': 'Search action requested'}]
2025-01-21 10:57:14,107 - DEBUG - Building SSL context
2025-01-21 10:57:15,342 - DEBUG - Switching to SSL
2025-01-21 10:57:15,910 - DEBUG - SSL has been enabled
2025-01-21 10:57:15,910 - DEBUG - Starting authorization phase
2025-01-21 10:57:15,910 - DEBUG - The provided initial strategy is mysql_native_password
2025-01-21 10:57:15,910 - INFO - package: mysql.connector.plugins
2025-01-21 10:57:15,926 - INFO - plugin_name: mysql_native_password
2025-01-21 10:57:15,932 - INFO - AUTHENTICATION_PLUGIN_CLASS: MySQLNativePasswordAuthPlugin
2025-01-21 10:57:16,310 - DEBUG - Server's response is an auth switch request
2025-01-21 10:57:16,310 - DEBUG - Switching to strategy caching_sha2_password
2025-01-21 10:57:16,310 - INFO - package: mysql.connector.plugins
2025-01-21 10:57:16,310 - INFO - plugin_name: caching_sha2_password
2025-01-21 10:57:16,310 - INFO - AUTHENTICATION_PLUGIN_CLASS: MySQLCachingSHA2PasswordAuthPlugin
2025-01-21 10:57:16,310 - DEBUG - # request: b'E\xcb \xf8R\x99\xd4\xed\xac\xcb\x81H\x10e\xb1uQ\x967G\xcc\xf1z\xbb\xd3\xdf5\xc71\xb4\x04\xa8' size: 32
2025-01-21 10:57:16,594 - DEBUG - # server response packet: b'\x02\x00\x00\x05\x01\x03'
2025-01-21 10:57:16,594 - DEBUG - Exchanging further packets
2025-01-21 10:57:16,594 - DEBUG - caching_sha2_password completed succesfully
2025-01-21 10:57:17,446 - DEBUG - Executing SQL: 
            SELECT r.name AS restaurant_name, d.dish_name, d.price, d.popularity_score
            FROM Dishes d
            JOIN Restaurants r ON d.restaurant_id = r.restaurant_id
             LIMIT 10
2025-01-21 10:57:17,446 - DEBUG - With parameters: []
2025-01-21 11:09:10,742 - DEBUG - close.started
2025-01-21 11:09:10,758 - DEBUG - close.complete
2025-01-21 11:10:10,105 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 11:10:10,110 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 11:10:10,755 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 11:10:10,757 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 11:10:11,434 - DEBUG - Using selector: SelectSelector
2025-01-21 11:10:11,586 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 11:10:11,588 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 11:10:12,570 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 11:10:12,573 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 11:10:13,991 - DEBUG - Calling on_field_start with no data
2025-01-21 11:10:13,992 - DEBUG - Calling on_field_name with data[0:5]
2025-01-21 11:10:13,993 - DEBUG - Calling on_field_data with data[6:22]
2025-01-21 11:10:13,994 - DEBUG - Calling on_field_end with no data
2025-01-21 11:10:13,994 - DEBUG - Calling on_end with no data
2025-01-21 11:10:13,996 - DEBUG - Received query: top 10 pasta
2025-01-21 11:10:14,012 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a parameter extraction system for a restaurant search application that handles both English and Hindi/Hinglish queries. For each query, extract key parameters and format them exactly like this example:\n\nParameter: limit\nValue: 10\nDescription: Number of results requested\n\nParameter: dish_type \nValue: biryani\nDescription: Type of dish or cuisine requested\n\nParameter: action\nValue: search\nDescription: Type of action requested\n\nRules:\n1. For number limits (like "top 10"), always use parameter name "limit" with numeric value.\n2. For food items (biryani, dosa etc), always use parameter name "dish_type".\n3. For actions (find, search, batao, dikha etc), always use parameter name "action" with value "search".\n4. For locations (area, jagah etc), use parameter name "location".\n5. Always include descriptions for each parameter.\n6. Format must match the example exactly.\n\nExample inputs and outputs:\n\nInput: "best biryani places in delhi"\nOutput:\nParameter: dish_type\nValue: biryani\nDescription: Type of dish requested\n\nParameter: location\nValue: delhi\nDescription: Search location requested\n\nParameter: action\nValue: search\nDescription: Search action requested\n\nInput: "top 5 dosa ki jagah batao"\nOutput:\nParameter: limit\nValue: 5\nDescription: Number of results requested\n\nParameter: dish_type\nValue: dosa\nDescription: Type of dish requested\n\nParameter: action\nValue: search\nDescription: Search action requested'}, {'role': 'user', 'content': 'Extract parameters from this query: top 10 pasta'}], 'model': 'llama-3.3-70b-versatile', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.2}}
2025-01-21 11:10:14,065 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-01-21 11:10:14,068 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2025-01-21 11:10:14,405 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002912FD01690>
2025-01-21 11:10:14,406 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000002912FBFFDC0> server_hostname='api.groq.com' timeout=None
2025-01-21 11:10:14,523 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002912FD01660>
2025-01-21 11:10:14,524 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-21 11:10:14,526 - DEBUG - send_request_headers.complete
2025-01-21 11:10:14,526 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-21 11:10:14,527 - DEBUG - send_request_body.complete
2025-01-21 11:10:14,528 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-21 11:10:15,042 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 21 Jan 2025 06:10:14 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'905523d6fc51e17b-MRS'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'x-groq-region', b'me-central-1'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'5624'), (b'x-ratelimit-reset-requests', b'1m26.4s'), (b'x-ratelimit-reset-tokens', b'3.76s'), (b'x-request-id', b'req_01jj3qq8ndetbbza008fzqhngp'), (b'Set-Cookie', b'__cf_bm=KaG75Jpp_uikUIftV9TFO32SR5Icr.CbLQ3XEcrL7OY-1737439814-1.0.1.1-7pUn7nOi6MOtI6RKNY8GgDfhUsnDeHK7mnFyaQYnwQbGw.Ooe080sxjLzmcTk.LPgcXkpBEDDw9fmhHVdZMO2Q; path=/; expires=Tue, 21-Jan-25 06:40:14 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-01-21 11:10:15,048 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-01-21 11:10:15,052 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-21 11:10:15,055 - DEBUG - receive_response_body.complete
2025-01-21 11:10:15,056 - DEBUG - response_closed.started
2025-01-21 11:10:15,057 - DEBUG - response_closed.complete
2025-01-21 11:10:15,058 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 21 Jan 2025 06:10:14 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '905523d6fc51e17b-MRS', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'x-groq-region': 'me-central-1', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '999', 'x-ratelimit-remaining-tokens': '5624', 'x-ratelimit-reset-requests': '1m26.4s', 'x-ratelimit-reset-tokens': '3.76s', 'x-request-id': 'req_01jj3qq8ndetbbza008fzqhngp', 'set-cookie': '__cf_bm=KaG75Jpp_uikUIftV9TFO32SR5Icr.CbLQ3XEcrL7OY-1737439814-1.0.1.1-7pUn7nOi6MOtI6RKNY8GgDfhUsnDeHK7mnFyaQYnwQbGw.Ooe080sxjLzmcTk.LPgcXkpBEDDw9fmhHVdZMO2Q; path=/; expires=Tue, 21-Jan-25 06:40:14 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-01-21 11:10:15,106 - DEBUG - Extracting parameters from response: Parameter: limit
Value: 10
Description: Number of results requested

Parameter: dish_type
Value: pasta
Description: Type of dish requested

Parameter: action
Value: search
Description: Type of action requested
2025-01-21 11:10:15,108 - DEBUG - Extracted parameters: [{'parameter': 'limit', 'value': 10, 'description': 'Number of results requested'}, {'parameter': 'dish_type', 'value': 'pasta', 'description': 'Type of dish requested'}, {'parameter': 'action', 'value': 'search', 'description': 'Type of action requested'}]
2025-01-21 11:10:15,109 - DEBUG - Parsed parameters: [{'parameter': 'limit', 'value': 10, 'description': 'Number of results requested'}, {'parameter': 'dish_type', 'value': 'pasta', 'description': 'Type of dish requested'}, {'parameter': 'action', 'value': 'search', 'description': 'Type of action requested'}]
2025-01-21 11:10:15,820 - DEBUG - Building SSL context
2025-01-21 11:10:17,223 - DEBUG - Switching to SSL
2025-01-21 11:10:17,794 - DEBUG - SSL has been enabled
2025-01-21 11:10:17,795 - DEBUG - Starting authorization phase
2025-01-21 11:10:17,797 - DEBUG - The provided initial strategy is mysql_native_password
2025-01-21 11:10:17,797 - INFO - package: mysql.connector.plugins
2025-01-21 11:10:17,798 - INFO - plugin_name: mysql_native_password
2025-01-21 11:10:17,804 - INFO - AUTHENTICATION_PLUGIN_CLASS: MySQLNativePasswordAuthPlugin
2025-01-21 11:10:18,299 - DEBUG - Server's response is an auth switch request
2025-01-21 11:10:18,301 - DEBUG - Switching to strategy caching_sha2_password
2025-01-21 11:10:18,302 - INFO - package: mysql.connector.plugins
2025-01-21 11:10:18,303 - INFO - plugin_name: caching_sha2_password
2025-01-21 11:10:18,304 - INFO - AUTHENTICATION_PLUGIN_CLASS: MySQLCachingSHA2PasswordAuthPlugin
2025-01-21 11:10:18,306 - DEBUG - # request: b'\x0f^#\xcd\x90c\x063\xfa5\xb5m\xc6;\xe2\xeb\x97\x9c\x9c\xe5-<k\x02L\x7f\\\x08*\x13\xb6\xbc' size: 32
2025-01-21 11:10:18,621 - DEBUG - # server response packet: b'\x02\x00\x00\x05\x01\x03'
2025-01-21 11:10:18,623 - DEBUG - Exchanging further packets
2025-01-21 11:10:18,626 - DEBUG - caching_sha2_password completed succesfully
2025-01-21 11:10:19,432 - DEBUG - Executing SQL: 
            SELECT r.name AS restaurant_name, d.dish_name, d.price, d.popularity_score
            FROM Dishes d
            JOIN Restaurants r ON d.restaurant_id = r.restaurant_id
             WHERE (d.dish_name LIKE %s) LIMIT 10
2025-01-21 11:10:19,435 - DEBUG - With parameters: ['%pasta%']
2025-01-21 11:10:20,279 - INFO - No restaurants found matching the criteria
2025-01-21 11:10:45,681 - DEBUG - Calling on_field_start with no data
2025-01-21 11:10:45,686 - DEBUG - Calling on_field_name with data[0:5]
2025-01-21 11:10:45,687 - DEBUG - Calling on_field_data with data[6:31]
2025-01-21 11:10:45,688 - DEBUG - Calling on_field_end with no data
2025-01-21 11:10:45,689 - DEBUG - Calling on_end with no data
2025-01-21 11:10:45,705 - DEBUG - Received query: top 10 burger spots
2025-01-21 11:10:45,726 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a parameter extraction system for a restaurant search application that handles both English and Hindi/Hinglish queries. For each query, extract key parameters and format them exactly like this example:\n\nParameter: limit\nValue: 10\nDescription: Number of results requested\n\nParameter: dish_type \nValue: biryani\nDescription: Type of dish or cuisine requested\n\nParameter: action\nValue: search\nDescription: Type of action requested\n\nRules:\n1. For number limits (like "top 10"), always use parameter name "limit" with numeric value.\n2. For food items (biryani, dosa etc), always use parameter name "dish_type".\n3. For actions (find, search, batao, dikha etc), always use parameter name "action" with value "search".\n4. For locations (area, jagah etc), use parameter name "location".\n5. Always include descriptions for each parameter.\n6. Format must match the example exactly.\n\nExample inputs and outputs:\n\nInput: "best biryani places in delhi"\nOutput:\nParameter: dish_type\nValue: biryani\nDescription: Type of dish requested\n\nParameter: location\nValue: delhi\nDescription: Search location requested\n\nParameter: action\nValue: search\nDescription: Search action requested\n\nInput: "top 5 dosa ki jagah batao"\nOutput:\nParameter: limit\nValue: 5\nDescription: Number of results requested\n\nParameter: dish_type\nValue: dosa\nDescription: Type of dish requested\n\nParameter: action\nValue: search\nDescription: Search action requested'}, {'role': 'user', 'content': 'Extract parameters from this query: top 10 burger spots'}], 'model': 'llama-3.3-70b-versatile', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.2}}
2025-01-21 11:10:45,732 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-01-21 11:10:45,734 - DEBUG - close.started
2025-01-21 11:10:45,735 - DEBUG - close.complete
2025-01-21 11:10:45,735 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2025-01-21 11:10:45,846 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002912FD548B0>
2025-01-21 11:10:45,848 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000002912FBFFDC0> server_hostname='api.groq.com' timeout=None
2025-01-21 11:10:45,964 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002912FD54880>
2025-01-21 11:10:45,965 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-21 11:10:45,967 - DEBUG - send_request_headers.complete
2025-01-21 11:10:45,967 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-21 11:10:45,969 - DEBUG - send_request_body.complete
2025-01-21 11:10:45,970 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-21 11:10:46,571 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 21 Jan 2025 06:10:46 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'9055249b7d9de28a-MRS'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'x-groq-region', b'me-central-1'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'998'), (b'x-ratelimit-remaining-tokens', b'5623'), (b'x-ratelimit-reset-requests', b'2m21.238s'), (b'x-ratelimit-reset-tokens', b'3.77s'), (b'x-request-id', b'req_01jj3qr7fqfnd90eh614xfwxay'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-01-21 11:10:46,575 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-01-21 11:10:46,578 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-21 11:10:46,580 - DEBUG - receive_response_body.complete
2025-01-21 11:10:46,582 - DEBUG - response_closed.started
2025-01-21 11:10:46,583 - DEBUG - response_closed.complete
2025-01-21 11:10:46,586 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 21 Jan 2025 06:10:46 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '9055249b7d9de28a-MRS', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'x-groq-region': 'me-central-1', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '998', 'x-ratelimit-remaining-tokens': '5623', 'x-ratelimit-reset-requests': '2m21.238s', 'x-ratelimit-reset-tokens': '3.77s', 'x-request-id': 'req_01jj3qr7fqfnd90eh614xfwxay', 'server': 'cloudflare', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-01-21 11:10:46,599 - DEBUG - Extracting parameters from response: Parameter: limit
Value: 10
Description: Number of results requested

Parameter: dish_type
Value: burger
Description: Type of dish requested

Parameter: action
Value: search
Description: Type of action requested
2025-01-21 11:10:46,602 - DEBUG - Extracted parameters: [{'parameter': 'limit', 'value': 10, 'description': 'Number of results requested'}, {'parameter': 'dish_type', 'value': 'burger', 'description': 'Type of dish requested'}, {'parameter': 'action', 'value': 'search', 'description': 'Type of action requested'}]
2025-01-21 11:10:46,604 - DEBUG - Parsed parameters: [{'parameter': 'limit', 'value': 10, 'description': 'Number of results requested'}, {'parameter': 'dish_type', 'value': 'burger', 'description': 'Type of dish requested'}, {'parameter': 'action', 'value': 'search', 'description': 'Type of action requested'}]
2025-01-21 11:10:47,119 - DEBUG - Building SSL context
2025-01-21 11:10:48,474 - DEBUG - Switching to SSL
2025-01-21 11:10:49,006 - DEBUG - SSL has been enabled
2025-01-21 11:10:49,008 - DEBUG - Starting authorization phase
2025-01-21 11:10:49,009 - DEBUG - The provided initial strategy is mysql_native_password
2025-01-21 11:10:49,381 - DEBUG - Server's response is an auth switch request
2025-01-21 11:10:49,383 - DEBUG - Switching to strategy caching_sha2_password
2025-01-21 11:10:49,385 - DEBUG - # request: b'\xfd|g\x85F]\xc3\xcfS4\xb3|\xd4i\x19\xb8\xdb\xc8\t\xb8\xc7\xfc\xd9\x95\nZ\x8f\xbf>N\xcbJ' size: 32
2025-01-21 11:10:49,640 - DEBUG - # server response packet: b'\x02\x00\x00\x05\x01\x03'
2025-01-21 11:10:49,641 - DEBUG - Exchanging further packets
2025-01-21 11:10:49,642 - DEBUG - caching_sha2_password completed succesfully
2025-01-21 11:10:50,421 - DEBUG - Executing SQL: 
            SELECT r.name AS restaurant_name, d.dish_name, d.price, d.popularity_score
            FROM Dishes d
            JOIN Restaurants r ON d.restaurant_id = r.restaurant_id
             WHERE (d.dish_name LIKE %s) LIMIT 10
2025-01-21 11:10:50,423 - DEBUG - With parameters: ['%burger%']
2025-01-21 11:16:04,109 - DEBUG - close.started
2025-01-21 11:16:04,110 - DEBUG - close.complete
2025-01-21 11:16:12,158 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 11:16:12,161 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 11:16:13,084 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 11:16:13,087 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 11:16:13,898 - DEBUG - Using selector: SelectSelector
2025-01-21 11:16:14,045 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 11:16:14,048 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 11:16:14,874 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 11:16:14,879 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 11:17:37,441 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 11:17:37,444 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 11:17:38,030 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 11:17:38,046 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 11:17:38,733 - DEBUG - Using selector: SelectSelector
2025-01-21 11:17:38,883 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 11:17:38,883 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 11:17:39,500 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 11:17:39,500 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 11:23:30,920 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 11:23:30,935 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 11:23:31,533 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 11:23:31,533 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 11:23:32,148 - DEBUG - Using selector: SelectSelector
2025-01-21 11:23:32,257 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 11:23:32,259 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 11:23:32,847 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 11:23:32,849 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 11:24:38,296 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 11:24:38,298 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 11:24:38,893 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 11:24:38,895 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 11:24:39,729 - DEBUG - Using selector: SelectSelector
2025-01-21 11:24:39,882 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 11:24:39,882 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 11:24:40,624 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 11:24:40,627 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 11:25:45,026 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 11:25:45,043 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 11:25:45,668 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 11:25:45,670 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 11:25:46,445 - DEBUG - Using selector: SelectSelector
2025-01-21 11:25:46,556 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 11:25:46,556 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 11:25:47,196 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 11:25:47,198 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 11:27:00,924 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 11:27:00,927 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 11:27:01,541 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 11:27:01,544 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 11:27:02,243 - DEBUG - Using selector: SelectSelector
2025-01-21 11:27:02,622 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 11:27:02,624 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 11:27:03,331 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 11:27:03,333 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 11:29:52,927 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 11:29:52,930 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 11:29:53,570 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 11:29:53,570 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 11:29:54,230 - DEBUG - Using selector: SelectSelector
2025-01-21 11:29:54,340 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 11:29:54,357 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 11:29:54,948 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 11:29:54,963 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 11:31:20,244 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 11:31:20,259 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 11:31:20,975 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 11:31:20,976 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 11:31:21,639 - DEBUG - Using selector: SelectSelector
2025-01-21 11:31:21,752 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 11:31:21,752 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 11:31:22,347 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 11:31:22,347 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 11:36:03,666 - DEBUG - Calling on_field_start with no data
2025-01-21 11:36:03,681 - DEBUG - Calling on_field_name with data[0:5]
2025-01-21 11:36:03,681 - DEBUG - Calling on_field_data with data[6:29]
2025-01-21 11:36:03,681 - DEBUG - Calling on_field_end with no data
2025-01-21 11:36:03,681 - DEBUG - Calling on_end with no data
2025-01-21 11:36:03,681 - DEBUG - Received query: top 10 burg spots
2025-01-21 11:36:03,702 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a parameter extraction system for a restaurant search application that handles both English and Hindi/Hinglish queries. For each query, extract key parameters and format them exactly like this example:\n\nParameter: limit\nValue: 10\nDescription: Number of results requested\n\nParameter: dish_type \nValue: biryani\nDescription: Type of dish or cuisine requested\n\nParameter: action\nValue: search\nDescription: Type of action requested\n\nRules:\n1. For number limits (like "top 10"), always use parameter name "limit" with numeric value.\n2. For food items (biryani, dosa etc), always use parameter name "dish_type".\n3. For actions (find, search, batao, dikha etc), always use parameter name "action" with value "search".\n4. For locations (area, jagah etc), use parameter name "location".\n5. Always include descriptions for each parameter.\n6. Format must match the example exactly.\n\nExample inputs and outputs:\n\nInput: "best biryani places in delhi"\nOutput:\nParameter: dish_type\nValue: biryani\nDescription: Type of dish requested\n\nParameter: location\nValue: delhi\nDescription: Search location requested\n\nParameter: action\nValue: search\nDescription: Search action requested\n\nInput: "top 5 dosa ki jagah batao"\nOutput:\nParameter: limit\nValue: 5\nDescription: Number of results requested\n\nParameter: dish_type\nValue: dosa\nDescription: Type of dish requested\n\nParameter: action\nValue: search\nDescription: Search action requested'}, {'role': 'user', 'content': 'Extract parameters from this query: top 10 burg spots'}], 'model': 'llama-3.3-70b-versatile', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.2}}
2025-01-21 11:36:03,730 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-01-21 11:36:03,732 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2025-01-21 11:36:04,187 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002246B64D7B0>
2025-01-21 11:36:04,189 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000002246B54FE40> server_hostname='api.groq.com' timeout=None
2025-01-21 11:36:04,302 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002246B64D780>
2025-01-21 11:36:04,302 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-21 11:36:04,302 - DEBUG - send_request_headers.complete
2025-01-21 11:36:04,302 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-21 11:36:04,302 - DEBUG - send_request_body.complete
2025-01-21 11:36:04,302 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-21 11:36:04,770 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 21 Jan 2025 06:36:04 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'905549ad6c43e1c8-MRS'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'x-groq-region', b'me-central-1'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'5623'), (b'x-ratelimit-reset-requests', b'1m26.4s'), (b'x-ratelimit-reset-tokens', b'3.77s'), (b'x-request-id', b'req_01jj3s6j5pezst7tzd263ph6y2'), (b'Set-Cookie', b'__cf_bm=8TvkU2zmP3pw9o13PxMBKVwwpKYzfeazzbqQ.9qEDCo-1737441364-1.0.1.1-uuUvB0a26.nB7HxyblkAITY8W0TPpXZ0Ck0pCHznF59qKOpQP0adQbbNNPnnPWET8IiVWufiYttqtBvHdPjZTw; path=/; expires=Tue, 21-Jan-25 07:06:04 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-01-21 11:36:04,770 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-01-21 11:36:04,770 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-21 11:36:04,785 - DEBUG - receive_response_body.complete
2025-01-21 11:36:04,786 - DEBUG - response_closed.started
2025-01-21 11:36:04,786 - DEBUG - response_closed.complete
2025-01-21 11:36:04,788 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 21 Jan 2025 06:36:04 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '905549ad6c43e1c8-MRS', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'x-groq-region': 'me-central-1', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '999', 'x-ratelimit-remaining-tokens': '5623', 'x-ratelimit-reset-requests': '1m26.4s', 'x-ratelimit-reset-tokens': '3.77s', 'x-request-id': 'req_01jj3s6j5pezst7tzd263ph6y2', 'set-cookie': '__cf_bm=8TvkU2zmP3pw9o13PxMBKVwwpKYzfeazzbqQ.9qEDCo-1737441364-1.0.1.1-uuUvB0a26.nB7HxyblkAITY8W0TPpXZ0Ck0pCHznF59qKOpQP0adQbbNNPnnPWET8IiVWufiYttqtBvHdPjZTw; path=/; expires=Tue, 21-Jan-25 07:06:04 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-01-21 11:36:04,818 - DEBUG - Extracting parameters from response: Parameter: limit
Value: 10
Description: Number of results requested

Parameter: dish_type
Value: burger
Description: Type of dish requested

Parameter: action
Value: search
Description: Type of action requested
2025-01-21 11:36:04,822 - DEBUG - Extracted parameters: [{'parameter': 'limit', 'value': 10, 'description': 'Number of results requested'}, {'parameter': 'dish_type', 'value': 'burger', 'description': 'Type of dish requested'}, {'parameter': 'action', 'value': 'search', 'description': 'Type of action requested'}]
2025-01-21 11:36:04,825 - DEBUG - Parsed parameters: [{'parameter': 'limit', 'value': 10, 'description': 'Number of results requested'}, {'parameter': 'dish_type', 'value': 'burger', 'description': 'Type of dish requested'}, {'parameter': 'action', 'value': 'search', 'description': 'Type of action requested'}]
2025-01-21 11:36:05,787 - DEBUG - Building SSL context
2025-01-21 11:36:07,085 - DEBUG - Switching to SSL
2025-01-21 11:36:08,194 - DEBUG - SSL has been enabled
2025-01-21 11:36:08,195 - DEBUG - Starting authorization phase
2025-01-21 11:36:08,195 - DEBUG - The provided initial strategy is mysql_native_password
2025-01-21 11:36:08,196 - INFO - package: mysql.connector.plugins
2025-01-21 11:36:08,197 - INFO - plugin_name: mysql_native_password
2025-01-21 11:36:08,201 - INFO - AUTHENTICATION_PLUGIN_CLASS: MySQLNativePasswordAuthPlugin
2025-01-21 11:36:08,693 - DEBUG - Server's response is an auth switch request
2025-01-21 11:36:08,693 - DEBUG - Switching to strategy caching_sha2_password
2025-01-21 11:36:08,693 - INFO - package: mysql.connector.plugins
2025-01-21 11:36:08,693 - INFO - plugin_name: caching_sha2_password
2025-01-21 11:36:08,693 - INFO - AUTHENTICATION_PLUGIN_CLASS: MySQLCachingSHA2PasswordAuthPlugin
2025-01-21 11:36:08,693 - DEBUG - # request: b"\x9d\xca\xdc\xc35\xde1\xa0\x97\x1b<f\xabx\x1f,$\x02\x8cK\xc3'l\x15\xba\xa9C\xec\x89\xa1\x9bZ" size: 32
2025-01-21 11:36:09,028 - DEBUG - # server response packet: b'\x02\x00\x00\x05\x01\x03'
2025-01-21 11:36:09,044 - DEBUG - Exchanging further packets
2025-01-21 11:36:09,045 - DEBUG - caching_sha2_password completed succesfully
2025-01-21 11:36:09,865 - DEBUG - Executing SQL: 
            SELECT r.name AS restaurant_name, d.dish_name, d.price, d.popularity_score
            FROM Dishes d
            JOIN Restaurants r ON d.restaurant_id = r.restaurant_id
             WHERE (d.dish_name LIKE %s) LIMIT 10
2025-01-21 11:36:09,867 - DEBUG - With parameters: ['%burger%']
2025-01-21 11:36:38,099 - DEBUG - Calling on_field_start with no data
2025-01-21 11:36:38,099 - DEBUG - Calling on_field_name with data[0:5]
2025-01-21 11:36:38,099 - DEBUG - Calling on_field_data with data[6:33]
2025-01-21 11:36:38,099 - DEBUG - Calling on_field_end with no data
2025-01-21 11:36:38,099 - DEBUG - Calling on_end with no data
2025-01-21 11:36:38,113 - DEBUG - Received query: berg ki achi jagahein
2025-01-21 11:36:38,127 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a parameter extraction system for a restaurant search application that handles both English and Hindi/Hinglish queries. For each query, extract key parameters and format them exactly like this example:\n\nParameter: limit\nValue: 10\nDescription: Number of results requested\n\nParameter: dish_type \nValue: biryani\nDescription: Type of dish or cuisine requested\n\nParameter: action\nValue: search\nDescription: Type of action requested\n\nRules:\n1. For number limits (like "top 10"), always use parameter name "limit" with numeric value.\n2. For food items (biryani, dosa etc), always use parameter name "dish_type".\n3. For actions (find, search, batao, dikha etc), always use parameter name "action" with value "search".\n4. For locations (area, jagah etc), use parameter name "location".\n5. Always include descriptions for each parameter.\n6. Format must match the example exactly.\n\nExample inputs and outputs:\n\nInput: "best biryani places in delhi"\nOutput:\nParameter: dish_type\nValue: biryani\nDescription: Type of dish requested\n\nParameter: location\nValue: delhi\nDescription: Search location requested\n\nParameter: action\nValue: search\nDescription: Search action requested\n\nInput: "top 5 dosa ki jagah batao"\nOutput:\nParameter: limit\nValue: 5\nDescription: Number of results requested\n\nParameter: dish_type\nValue: dosa\nDescription: Type of dish requested\n\nParameter: action\nValue: search\nDescription: Search action requested'}, {'role': 'user', 'content': 'Extract parameters from this query: berg ki achi jagahein'}], 'model': 'llama-3.3-70b-versatile', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.2}}
2025-01-21 11:36:38,138 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-01-21 11:36:38,140 - DEBUG - close.started
2025-01-21 11:36:38,142 - DEBUG - close.complete
2025-01-21 11:36:38,143 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2025-01-21 11:36:38,299 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002246B6A09D0>
2025-01-21 11:36:38,299 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000002246B54FE40> server_hostname='api.groq.com' timeout=None
2025-01-21 11:36:38,415 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002246B6A09A0>
2025-01-21 11:36:38,415 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-21 11:36:38,415 - DEBUG - send_request_headers.complete
2025-01-21 11:36:38,415 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-21 11:36:38,415 - DEBUG - send_request_body.complete
2025-01-21 11:36:38,415 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-21 11:36:38,933 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 21 Jan 2025 06:36:38 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'90554a82aaa8e244-MRS'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'x-groq-region', b'me-central-1'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'998'), (b'x-ratelimit-remaining-tokens', b'5622'), (b'x-ratelimit-reset-requests', b'2m18.581s'), (b'x-ratelimit-reset-tokens', b'3.78s'), (b'x-request-id', b'req_01jj3s7kk0ev4sm2rywcjsy1xx'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-01-21 11:36:38,933 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-01-21 11:36:38,933 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-21 11:36:38,933 - DEBUG - receive_response_body.complete
2025-01-21 11:36:38,933 - DEBUG - response_closed.started
2025-01-21 11:36:38,933 - DEBUG - response_closed.complete
2025-01-21 11:36:38,944 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 21 Jan 2025 06:36:38 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '90554a82aaa8e244-MRS', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'x-groq-region': 'me-central-1', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '998', 'x-ratelimit-remaining-tokens': '5622', 'x-ratelimit-reset-requests': '2m18.581s', 'x-ratelimit-reset-tokens': '3.78s', 'x-request-id': 'req_01jj3s7kk0ev4sm2rywcjsy1xx', 'server': 'cloudflare', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-01-21 11:36:38,950 - DEBUG - Extracting parameters from response: Parameter: dish_type
Value: berg
Description: Type of dish requested

Parameter: action
Value: search
Description: Search action requested
2025-01-21 11:36:38,952 - DEBUG - Extracted parameters: [{'parameter': 'dish_type', 'value': 'berg', 'description': 'Type of dish requested'}, {'parameter': 'action', 'value': 'search', 'description': 'Search action requested'}]
2025-01-21 11:36:38,953 - DEBUG - Parsed parameters: [{'parameter': 'dish_type', 'value': 'berg', 'description': 'Type of dish requested'}, {'parameter': 'action', 'value': 'search', 'description': 'Search action requested'}]
2025-01-21 11:36:39,501 - DEBUG - Building SSL context
2025-01-21 11:36:40,703 - DEBUG - Switching to SSL
2025-01-21 11:36:41,235 - DEBUG - SSL has been enabled
2025-01-21 11:36:41,235 - DEBUG - Starting authorization phase
2025-01-21 11:36:41,235 - DEBUG - The provided initial strategy is mysql_native_password
2025-01-21 11:36:41,637 - DEBUG - Server's response is an auth switch request
2025-01-21 11:36:41,637 - DEBUG - Switching to strategy caching_sha2_password
2025-01-21 11:36:41,637 - DEBUG - # request: b'\x8fH\xe4\x10~\xc4H<\x8el\xa4\xfc\x12j\xb2\xec\xccZ`%\xcf\xe2?\x7f\x0f\xa2s1\xa5eZ\xbd' size: 32
2025-01-21 11:36:41,937 - DEBUG - # server response packet: b'\x02\x00\x00\x05\x01\x03'
2025-01-21 11:36:41,937 - DEBUG - Exchanging further packets
2025-01-21 11:36:41,937 - DEBUG - caching_sha2_password completed succesfully
2025-01-21 11:36:42,756 - DEBUG - Executing SQL: 
            SELECT r.name AS restaurant_name, d.dish_name, d.price, d.popularity_score
            FROM Dishes d
            JOIN Restaurants r ON d.restaurant_id = r.restaurant_id
             WHERE (d.dish_name LIKE %s) LIMIT 10
2025-01-21 11:36:42,772 - DEBUG - With parameters: ['%berg%']
2025-01-21 11:36:43,574 - INFO - No restaurants found matching the criteria
2025-01-21 11:36:56,832 - DEBUG - Calling on_field_start with no data
2025-01-21 11:36:56,832 - DEBUG - Calling on_field_name with data[0:5]
2025-01-21 11:36:56,832 - DEBUG - Calling on_field_data with data[6:33]
2025-01-21 11:36:56,832 - DEBUG - Calling on_field_end with no data
2025-01-21 11:36:56,832 - DEBUG - Calling on_end with no data
2025-01-21 11:36:56,832 - DEBUG - Received query: burg ki achi jagahein
2025-01-21 11:36:56,856 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a parameter extraction system for a restaurant search application that handles both English and Hindi/Hinglish queries. For each query, extract key parameters and format them exactly like this example:\n\nParameter: limit\nValue: 10\nDescription: Number of results requested\n\nParameter: dish_type \nValue: biryani\nDescription: Type of dish or cuisine requested\n\nParameter: action\nValue: search\nDescription: Type of action requested\n\nRules:\n1. For number limits (like "top 10"), always use parameter name "limit" with numeric value.\n2. For food items (biryani, dosa etc), always use parameter name "dish_type".\n3. For actions (find, search, batao, dikha etc), always use parameter name "action" with value "search".\n4. For locations (area, jagah etc), use parameter name "location".\n5. Always include descriptions for each parameter.\n6. Format must match the example exactly.\n\nExample inputs and outputs:\n\nInput: "best biryani places in delhi"\nOutput:\nParameter: dish_type\nValue: biryani\nDescription: Type of dish requested\n\nParameter: location\nValue: delhi\nDescription: Search location requested\n\nParameter: action\nValue: search\nDescription: Search action requested\n\nInput: "top 5 dosa ki jagah batao"\nOutput:\nParameter: limit\nValue: 5\nDescription: Number of results requested\n\nParameter: dish_type\nValue: dosa\nDescription: Type of dish requested\n\nParameter: action\nValue: search\nDescription: Search action requested'}, {'role': 'user', 'content': 'Extract parameters from this query: burg ki achi jagahein'}], 'model': 'llama-3.3-70b-versatile', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.2}}
2025-01-21 11:36:56,860 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-01-21 11:36:56,861 - DEBUG - close.started
2025-01-21 11:36:56,862 - DEBUG - close.complete
2025-01-21 11:36:56,863 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2025-01-21 11:36:56,984 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002246B6A10C0>
2025-01-21 11:36:56,984 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000002246B54FE40> server_hostname='api.groq.com' timeout=None
2025-01-21 11:36:57,101 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002246B6A1330>
2025-01-21 11:36:57,117 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-21 11:36:57,118 - DEBUG - send_request_headers.complete
2025-01-21 11:36:57,119 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-21 11:36:57,119 - DEBUG - send_request_body.complete
2025-01-21 11:36:57,119 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-21 11:36:57,535 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 21 Jan 2025 06:36:57 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'90554af789d6e1e8-MRS'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'x-groq-region', b'me-central-1'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'997'), (b'x-ratelimit-remaining-tokens', b'5622'), (b'x-ratelimit-reset-requests', b'4m0.592999999s'), (b'x-ratelimit-reset-tokens', b'3.78s'), (b'x-request-id', b'req_01jj3s85rgezssag2tsacdgp71'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-01-21 11:36:57,535 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-01-21 11:36:57,535 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-21 11:36:57,547 - DEBUG - receive_response_body.complete
2025-01-21 11:36:57,549 - DEBUG - response_closed.started
2025-01-21 11:36:57,551 - DEBUG - response_closed.complete
2025-01-21 11:36:57,553 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 21 Jan 2025 06:36:57 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '90554af789d6e1e8-MRS', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'x-groq-region': 'me-central-1', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '997', 'x-ratelimit-remaining-tokens': '5622', 'x-ratelimit-reset-requests': '4m0.592999999s', 'x-ratelimit-reset-tokens': '3.78s', 'x-request-id': 'req_01jj3s85rgezssag2tsacdgp71', 'server': 'cloudflare', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-01-21 11:36:57,566 - DEBUG - Extracting parameters from response: Parameter: dish_type
Value: burger
Description: Type of dish requested

Parameter: action
Value: search
Description: Search action requested
2025-01-21 11:36:57,569 - DEBUG - Extracted parameters: [{'parameter': 'dish_type', 'value': 'burger', 'description': 'Type of dish requested'}, {'parameter': 'action', 'value': 'search', 'description': 'Search action requested'}]
2025-01-21 11:36:57,570 - DEBUG - Parsed parameters: [{'parameter': 'dish_type', 'value': 'burger', 'description': 'Type of dish requested'}, {'parameter': 'action', 'value': 'search', 'description': 'Search action requested'}]
2025-01-21 11:36:58,100 - DEBUG - Building SSL context
2025-01-21 11:36:59,336 - DEBUG - Switching to SSL
2025-01-21 11:36:59,888 - DEBUG - SSL has been enabled
2025-01-21 11:36:59,888 - DEBUG - Starting authorization phase
2025-01-21 11:36:59,888 - DEBUG - The provided initial strategy is mysql_native_password
2025-01-21 11:37:00,287 - DEBUG - Server's response is an auth switch request
2025-01-21 11:37:00,288 - DEBUG - Switching to strategy caching_sha2_password
2025-01-21 11:37:00,288 - DEBUG - # request: b'2\x9c0\t\x808\xf8\xaa\x92m\xc6}\xb3\xebd\xde\xac\xd9\xa0\xcc\x02\xddf6r@\x03\xbe\x84\xcd\x7f\xb3' size: 32
2025-01-21 11:37:00,555 - DEBUG - # server response packet: b'\x02\x00\x00\x05\x01\x03'
2025-01-21 11:37:00,555 - DEBUG - Exchanging further packets
2025-01-21 11:37:00,555 - DEBUG - caching_sha2_password completed succesfully
2025-01-21 11:37:01,356 - DEBUG - Executing SQL: 
            SELECT r.name AS restaurant_name, d.dish_name, d.price, d.popularity_score
            FROM Dishes d
            JOIN Restaurants r ON d.restaurant_id = r.restaurant_id
             WHERE (d.dish_name LIKE %s) LIMIT 10
2025-01-21 11:37:01,356 - DEBUG - With parameters: ['%burger%']
2025-01-21 12:02:22,730 - DEBUG - Calling on_field_start with no data
2025-01-21 12:02:22,730 - DEBUG - Calling on_field_name with data[0:5]
2025-01-21 12:02:22,730 - DEBUG - Calling on_field_data with data[6:33]
2025-01-21 12:02:22,730 - DEBUG - Calling on_field_end with no data
2025-01-21 12:02:22,730 - DEBUG - Calling on_end with no data
2025-01-21 12:02:22,730 - DEBUG - Received query: burg ki achi jagahein
2025-01-21 12:02:22,749 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a parameter extraction system for a restaurant search application that handles both English and Hindi/Hinglish queries. For each query, extract key parameters and format them exactly like this example:\n\nParameter: limit\nValue: 10\nDescription: Number of results requested\n\nParameter: dish_type \nValue: biryani\nDescription: Type of dish or cuisine requested\n\nParameter: action\nValue: search\nDescription: Type of action requested\n\nRules:\n1. For number limits (like "top 10"), always use parameter name "limit" with numeric value.\n2. For food items (biryani, dosa etc), always use parameter name "dish_type".\n3. For actions (find, search, batao, dikha etc), always use parameter name "action" with value "search".\n4. For locations (area, jagah etc), use parameter name "location".\n5. Always include descriptions for each parameter.\n6. Format must match the example exactly.\n\nExample inputs and outputs:\n\nInput: "best biryani places in delhi"\nOutput:\nParameter: dish_type\nValue: biryani\nDescription: Type of dish requested\n\nParameter: location\nValue: delhi\nDescription: Search location requested\n\nParameter: action\nValue: search\nDescription: Search action requested\n\nInput: "top 5 dosa ki jagah batao"\nOutput:\nParameter: limit\nValue: 5\nDescription: Number of results requested\n\nParameter: dish_type\nValue: dosa\nDescription: Type of dish requested\n\nParameter: action\nValue: search\nDescription: Search action requested'}, {'role': 'user', 'content': 'Extract parameters from this query: burg ki achi jagahein'}], 'model': 'llama-3.3-70b-versatile', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.2}}
2025-01-21 12:02:22,758 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-01-21 12:02:22,760 - DEBUG - close.started
2025-01-21 12:02:22,762 - DEBUG - close.complete
2025-01-21 12:02:22,765 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2025-01-21 12:02:23,084 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002246B6A3160>
2025-01-21 12:02:23,084 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000002246B54FE40> server_hostname='api.groq.com' timeout=None
2025-01-21 12:02:23,204 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002246B6A3130>
2025-01-21 12:02:23,204 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-21 12:02:23,204 - DEBUG - send_request_headers.complete
2025-01-21 12:02:23,204 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-21 12:02:23,204 - DEBUG - send_request_body.complete
2025-01-21 12:02:23,204 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-21 12:02:23,600 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 21 Jan 2025 07:02:23 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'90557039d8f9e1b2-MRS'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'x-groq-region', b'me-central-1'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'5622'), (b'x-ratelimit-reset-requests', b'1m26.4s'), (b'x-ratelimit-reset-tokens', b'3.78s'), (b'x-request-id', b'req_01jj3tpr3mf01trpgdcx1qqc42'), (b'Set-Cookie', b'__cf_bm=bWfYjx3mFBBA4mlYfBfxOHWhDkEGK_xiEl2FLxlrh98-1737442943-1.0.1.1-.y5agy9n5gEbKO5VGuJ8v3KloUN.T8EhceOWsj8jxBaV4d.SX6JchGOHBpeJwfZPXsK1p7y.m6CljdMnuD3POQ; path=/; expires=Tue, 21-Jan-25 07:32:23 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-01-21 12:02:23,604 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-01-21 12:02:23,606 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-21 12:02:23,608 - DEBUG - receive_response_body.complete
2025-01-21 12:02:23,609 - DEBUG - response_closed.started
2025-01-21 12:02:23,610 - DEBUG - response_closed.complete
2025-01-21 12:02:23,611 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 21 Jan 2025 07:02:23 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '90557039d8f9e1b2-MRS', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'x-groq-region': 'me-central-1', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '999', 'x-ratelimit-remaining-tokens': '5622', 'x-ratelimit-reset-requests': '1m26.4s', 'x-ratelimit-reset-tokens': '3.78s', 'x-request-id': 'req_01jj3tpr3mf01trpgdcx1qqc42', 'set-cookie': '__cf_bm=bWfYjx3mFBBA4mlYfBfxOHWhDkEGK_xiEl2FLxlrh98-1737442943-1.0.1.1-.y5agy9n5gEbKO5VGuJ8v3KloUN.T8EhceOWsj8jxBaV4d.SX6JchGOHBpeJwfZPXsK1p7y.m6CljdMnuD3POQ; path=/; expires=Tue, 21-Jan-25 07:32:23 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-01-21 12:02:23,619 - DEBUG - Extracting parameters from response: Parameter: dish_type
Value: burger
Description: Type of dish requested

Parameter: action
Value: search
Description: Search action requested
2025-01-21 12:02:23,626 - DEBUG - Extracted parameters: [{'parameter': 'dish_type', 'value': 'burger', 'description': 'Type of dish requested'}, {'parameter': 'action', 'value': 'search', 'description': 'Search action requested'}]
2025-01-21 12:02:23,626 - DEBUG - Parsed parameters: [{'parameter': 'dish_type', 'value': 'burger', 'description': 'Type of dish requested'}, {'parameter': 'action', 'value': 'search', 'description': 'Search action requested'}]
2025-01-21 12:02:24,274 - DEBUG - Building SSL context
2025-01-21 12:02:25,542 - DEBUG - Switching to SSL
2025-01-21 12:02:26,076 - DEBUG - SSL has been enabled
2025-01-21 12:02:26,076 - DEBUG - Starting authorization phase
2025-01-21 12:02:26,076 - DEBUG - The provided initial strategy is mysql_native_password
2025-01-21 12:02:26,479 - DEBUG - Server's response is an auth switch request
2025-01-21 12:02:26,479 - DEBUG - Switching to strategy caching_sha2_password
2025-01-21 12:02:26,479 - DEBUG - # request: b'wy\xb1\xd6\xe3\xfdl\tN\x14\xa2\xa74\xe0&p\x1cj\x90\\A\xba\x99\xbcO\xdb\xdb\x96!\xf7\xa3b' size: 32
2025-01-21 12:02:26,746 - DEBUG - # server response packet: b'\x02\x00\x00\x05\x01\x03'
2025-01-21 12:02:26,763 - DEBUG - Exchanging further packets
2025-01-21 12:02:26,781 - DEBUG - caching_sha2_password completed succesfully
2025-01-21 12:02:27,574 - DEBUG - Executing SQL: 
            SELECT r.name AS restaurant_name, d.dish_name, d.price, d.popularity_score
            FROM Dishes d
            JOIN Restaurants r ON d.restaurant_id = r.restaurant_id
             WHERE (d.dish_name LIKE %s) LIMIT 10
2025-01-21 12:02:27,574 - DEBUG - With parameters: ['%burger%']
2025-01-21 12:02:52,421 - DEBUG - Calling on_field_start with no data
2025-01-21 12:02:52,424 - DEBUG - Calling on_field_name with data[0:5]
2025-01-21 12:02:52,425 - DEBUG - Calling on_field_data with data[6:51]
2025-01-21 12:02:52,426 - DEBUG - Calling on_field_end with no data
2025-01-21 12:02:52,427 - DEBUG - Calling on_end with no data
2025-01-21 12:02:52,427 - DEBUG - Received query: cheese ki 3 achi items wali jagah
2025-01-21 12:02:52,438 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a parameter extraction system for a restaurant search application that handles both English and Hindi/Hinglish queries. For each query, extract key parameters and format them exactly like this example:\n\nParameter: limit\nValue: 10\nDescription: Number of results requested\n\nParameter: dish_type \nValue: biryani\nDescription: Type of dish or cuisine requested\n\nParameter: action\nValue: search\nDescription: Type of action requested\n\nRules:\n1. For number limits (like "top 10"), always use parameter name "limit" with numeric value.\n2. For food items (biryani, dosa etc), always use parameter name "dish_type".\n3. For actions (find, search, batao, dikha etc), always use parameter name "action" with value "search".\n4. For locations (area, jagah etc), use parameter name "location".\n5. Always include descriptions for each parameter.\n6. Format must match the example exactly.\n\nExample inputs and outputs:\n\nInput: "best biryani places in delhi"\nOutput:\nParameter: dish_type\nValue: biryani\nDescription: Type of dish requested\n\nParameter: location\nValue: delhi\nDescription: Search location requested\n\nParameter: action\nValue: search\nDescription: Search action requested\n\nInput: "top 5 dosa ki jagah batao"\nOutput:\nParameter: limit\nValue: 5\nDescription: Number of results requested\n\nParameter: dish_type\nValue: dosa\nDescription: Type of dish requested\n\nParameter: action\nValue: search\nDescription: Search action requested'}, {'role': 'user', 'content': 'Extract parameters from this query: cheese ki 3 achi items wali jagah'}], 'model': 'llama-3.3-70b-versatile', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.2}}
2025-01-21 12:02:52,446 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-01-21 12:02:52,448 - DEBUG - close.started
2025-01-21 12:02:52,449 - DEBUG - close.complete
2025-01-21 12:02:52,450 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2025-01-21 12:02:52,558 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002246B6DD120>
2025-01-21 12:02:52,558 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000002246B54FE40> server_hostname='api.groq.com' timeout=None
2025-01-21 12:02:52,760 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002246B6DD0F0>
2025-01-21 12:02:52,761 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-21 12:02:52,763 - DEBUG - send_request_headers.complete
2025-01-21 12:02:52,764 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-21 12:02:52,765 - DEBUG - send_request_body.complete
2025-01-21 12:02:52,765 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-21 12:02:53,378 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 21 Jan 2025 07:02:53 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'905570f29b030da9-MRS'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'x-groq-region', b'me-central-1'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'998'), (b'x-ratelimit-remaining-tokens', b'5619'), (b'x-ratelimit-reset-requests', b'2m23.218s'), (b'x-ratelimit-reset-tokens', b'3.81s'), (b'x-request-id', b'req_01jj3tqn02f028qftxc85tm6dp'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-01-21 12:02:53,378 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-01-21 12:02:53,378 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-21 12:02:53,378 - DEBUG - receive_response_body.complete
2025-01-21 12:02:53,389 - DEBUG - response_closed.started
2025-01-21 12:02:53,390 - DEBUG - response_closed.complete
2025-01-21 12:02:53,392 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 21 Jan 2025 07:02:53 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '905570f29b030da9-MRS', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'x-groq-region': 'me-central-1', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '998', 'x-ratelimit-remaining-tokens': '5619', 'x-ratelimit-reset-requests': '2m23.218s', 'x-ratelimit-reset-tokens': '3.81s', 'x-request-id': 'req_01jj3tqn02f028qftxc85tm6dp', 'server': 'cloudflare', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-01-21 12:02:53,405 - DEBUG - Extracting parameters from response: Parameter: dish_type
Value: cheese
Description: Type of dish requested

Parameter: limit
Value: 3
Description: Number of results requested

Parameter: location
Value: None
Description: No specific location mentioned, general search location requested

Parameter: action
Value: search
Description: Search action requested
2025-01-21 12:02:53,408 - DEBUG - Extracted parameters: [{'parameter': 'dish_type', 'value': 'cheese', 'description': 'Type of dish requested'}, {'parameter': 'limit', 'value': 3, 'description': 'Number of results requested'}, {'parameter': 'location', 'value': 'None', 'description': 'No specific location mentioned, general search location requested'}, {'parameter': 'action', 'value': 'search', 'description': 'Search action requested'}]
2025-01-21 12:02:53,413 - DEBUG - Parsed parameters: [{'parameter': 'dish_type', 'value': 'cheese', 'description': 'Type of dish requested'}, {'parameter': 'limit', 'value': 3, 'description': 'Number of results requested'}, {'parameter': 'location', 'value': 'None', 'description': 'No specific location mentioned, general search location requested'}, {'parameter': 'action', 'value': 'search', 'description': 'Search action requested'}]
2025-01-21 12:02:53,974 - DEBUG - Building SSL context
2025-01-21 12:02:55,625 - DEBUG - Switching to SSL
2025-01-21 12:02:56,168 - DEBUG - SSL has been enabled
2025-01-21 12:02:56,168 - DEBUG - Starting authorization phase
2025-01-21 12:02:56,169 - DEBUG - The provided initial strategy is mysql_native_password
2025-01-21 12:02:56,551 - DEBUG - Server's response is an auth switch request
2025-01-21 12:02:56,551 - DEBUG - Switching to strategy caching_sha2_password
2025-01-21 12:02:56,551 - DEBUG - # request: b';#ngB\xbe\x03\xe9w\xb8\xb8S\n\x06\x9c\xab\xaf\x0c\xa9\xa0\xf8*\xb4\xed\xb2b\xdbn\xb7\x07\t\xef' size: 32
2025-01-21 12:02:56,836 - DEBUG - # server response packet: b'\x02\x00\x00\x05\x01\x03'
2025-01-21 12:02:56,836 - DEBUG - Exchanging further packets
2025-01-21 12:02:56,836 - DEBUG - caching_sha2_password completed succesfully
2025-01-21 12:02:57,641 - DEBUG - Executing SQL: 
            SELECT r.name AS restaurant_name, d.dish_name, d.price, d.popularity_score
            FROM Dishes d
            JOIN Restaurants r ON d.restaurant_id = r.restaurant_id
             WHERE (d.dish_name LIKE %s) AND r.location LIKE %s LIMIT 3
2025-01-21 12:02:57,644 - DEBUG - With parameters: ['%cheese%', '%None%']
2025-01-21 12:02:58,457 - ERROR - Database connection error: 1054 (42S22): Unknown column 'r.location' in 'where clause'
2025-01-21 12:02:58,457 - ERROR - Database query error: 1054 (42S22): Unknown column 'r.location' in 'where clause'
2025-01-21 12:03:22,034 - DEBUG - Calling on_field_start with no data
2025-01-21 12:03:22,034 - DEBUG - Calling on_field_name with data[0:5]
2025-01-21 12:03:22,034 - DEBUG - Calling on_field_data with data[6:49]
2025-01-21 12:03:22,034 - DEBUG - Calling on_field_end with no data
2025-01-21 12:03:22,034 - DEBUG - Calling on_end with no data
2025-01-21 12:03:22,034 - DEBUG - Received query: cheese ki 3 achi items ki jagah
2025-01-21 12:03:22,055 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a parameter extraction system for a restaurant search application that handles both English and Hindi/Hinglish queries. For each query, extract key parameters and format them exactly like this example:\n\nParameter: limit\nValue: 10\nDescription: Number of results requested\n\nParameter: dish_type \nValue: biryani\nDescription: Type of dish or cuisine requested\n\nParameter: action\nValue: search\nDescription: Type of action requested\n\nRules:\n1. For number limits (like "top 10"), always use parameter name "limit" with numeric value.\n2. For food items (biryani, dosa etc), always use parameter name "dish_type".\n3. For actions (find, search, batao, dikha etc), always use parameter name "action" with value "search".\n4. For locations (area, jagah etc), use parameter name "location".\n5. Always include descriptions for each parameter.\n6. Format must match the example exactly.\n\nExample inputs and outputs:\n\nInput: "best biryani places in delhi"\nOutput:\nParameter: dish_type\nValue: biryani\nDescription: Type of dish requested\n\nParameter: location\nValue: delhi\nDescription: Search location requested\n\nParameter: action\nValue: search\nDescription: Search action requested\n\nInput: "top 5 dosa ki jagah batao"\nOutput:\nParameter: limit\nValue: 5\nDescription: Number of results requested\n\nParameter: dish_type\nValue: dosa\nDescription: Type of dish requested\n\nParameter: action\nValue: search\nDescription: Search action requested'}, {'role': 'user', 'content': 'Extract parameters from this query: cheese ki 3 achi items ki jagah'}], 'model': 'llama-3.3-70b-versatile', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.2}}
2025-01-21 12:03:22,059 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-01-21 12:03:22,064 - DEBUG - close.started
2025-01-21 12:03:22,066 - DEBUG - close.complete
2025-01-21 12:03:22,067 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2025-01-21 12:03:22,180 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002246B5F34F0>
2025-01-21 12:03:22,182 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000002246B54FE40> server_hostname='api.groq.com' timeout=None
2025-01-21 12:03:22,299 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002246B62C130>
2025-01-21 12:03:22,299 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-21 12:03:22,299 - DEBUG - send_request_headers.complete
2025-01-21 12:03:22,299 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-21 12:03:22,299 - DEBUG - send_request_body.complete
2025-01-21 12:03:22,299 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-21 12:03:22,959 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 21 Jan 2025 07:03:22 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'905571ab3e850779-MRS'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'x-groq-region', b'me-central-1'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'997'), (b'x-ratelimit-remaining-tokens', b'5620'), (b'x-ratelimit-reset-requests', b'3m49.659999999s'), (b'x-ratelimit-reset-tokens', b'3.8s'), (b'x-request-id', b'req_01jj3trhvdfq3bwre6dpd1j6bg'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-01-21 12:03:22,962 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-01-21 12:03:22,963 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-21 12:03:22,966 - DEBUG - receive_response_body.complete
2025-01-21 12:03:22,968 - DEBUG - response_closed.started
2025-01-21 12:03:22,969 - DEBUG - response_closed.complete
2025-01-21 12:03:22,971 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 21 Jan 2025 07:03:22 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '905571ab3e850779-MRS', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'x-groq-region': 'me-central-1', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '997', 'x-ratelimit-remaining-tokens': '5620', 'x-ratelimit-reset-requests': '3m49.659999999s', 'x-ratelimit-reset-tokens': '3.8s', 'x-request-id': 'req_01jj3trhvdfq3bwre6dpd1j6bg', 'server': 'cloudflare', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-01-21 12:03:22,978 - DEBUG - Extracting parameters from response: Parameter: dish_type
Value: cheese
Description: Type of dish requested

Parameter: limit
Value: 3
Description: Number of results requested

Parameter: location
Value: None
Description: No specific search location requested, but location implied as part of the query

Parameter: action
Value: search
Description: Search action requested
2025-01-21 12:03:22,984 - DEBUG - Extracted parameters: [{'parameter': 'dish_type', 'value': 'cheese', 'description': 'Type of dish requested'}, {'parameter': 'limit', 'value': 3, 'description': 'Number of results requested'}, {'parameter': 'location', 'value': 'None', 'description': 'No specific search location requested, but location implied as part of the query'}, {'parameter': 'action', 'value': 'search', 'description': 'Search action requested'}]
2025-01-21 12:03:22,986 - DEBUG - Parsed parameters: [{'parameter': 'dish_type', 'value': 'cheese', 'description': 'Type of dish requested'}, {'parameter': 'limit', 'value': 3, 'description': 'Number of results requested'}, {'parameter': 'location', 'value': 'None', 'description': 'No specific search location requested, but location implied as part of the query'}, {'parameter': 'action', 'value': 'search', 'description': 'Search action requested'}]
2025-01-21 12:03:23,656 - DEBUG - Building SSL context
2025-01-21 12:03:25,334 - DEBUG - Switching to SSL
2025-01-21 12:03:25,915 - DEBUG - SSL has been enabled
2025-01-21 12:03:25,915 - DEBUG - Starting authorization phase
2025-01-21 12:03:25,915 - DEBUG - The provided initial strategy is mysql_native_password
2025-01-21 12:03:26,324 - DEBUG - Server's response is an auth switch request
2025-01-21 12:03:26,324 - DEBUG - Switching to strategy caching_sha2_password
2025-01-21 12:03:26,324 - DEBUG - # request: b'\x89\xaa\xf8\x0e\xbfi\x97\xf3hZs\x97\xfa\x12\xefZ\xc4\xdc\x04A\xe2\xd7\xe4\xe7Q\x00q\x17x>lN' size: 32
2025-01-21 12:03:26,610 - DEBUG - # server response packet: b'\x02\x00\x00\x05\x01\x03'
2025-01-21 12:03:26,610 - DEBUG - Exchanging further packets
2025-01-21 12:03:26,610 - DEBUG - caching_sha2_password completed succesfully
2025-01-21 12:03:27,439 - DEBUG - Executing SQL: 
            SELECT r.name AS restaurant_name, d.dish_name, d.price, d.popularity_score
            FROM Dishes d
            JOIN Restaurants r ON d.restaurant_id = r.restaurant_id
             WHERE (d.dish_name LIKE %s) AND r.location LIKE %s LIMIT 3
2025-01-21 12:03:27,439 - DEBUG - With parameters: ['%cheese%', '%None%']
2025-01-21 12:03:28,302 - ERROR - Database connection error: 1054 (42S22): Unknown column 'r.location' in 'where clause'
2025-01-21 12:03:28,302 - ERROR - Database query error: 1054 (42S22): Unknown column 'r.location' in 'where clause'
2025-01-21 12:03:47,144 - DEBUG - Calling on_field_start with no data
2025-01-21 12:03:47,144 - DEBUG - Calling on_field_name with data[0:5]
2025-01-21 12:03:47,144 - DEBUG - Calling on_field_data with data[6:36]
2025-01-21 12:03:47,144 - DEBUG - Calling on_field_end with no data
2025-01-21 12:03:47,144 - DEBUG - Calling on_end with no data
2025-01-21 12:03:47,144 - DEBUG - Received query: cheese ki 3 achi jagah
2025-01-21 12:03:47,166 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a parameter extraction system for a restaurant search application that handles both English and Hindi/Hinglish queries. For each query, extract key parameters and format them exactly like this example:\n\nParameter: limit\nValue: 10\nDescription: Number of results requested\n\nParameter: dish_type \nValue: biryani\nDescription: Type of dish or cuisine requested\n\nParameter: action\nValue: search\nDescription: Type of action requested\n\nRules:\n1. For number limits (like "top 10"), always use parameter name "limit" with numeric value.\n2. For food items (biryani, dosa etc), always use parameter name "dish_type".\n3. For actions (find, search, batao, dikha etc), always use parameter name "action" with value "search".\n4. For locations (area, jagah etc), use parameter name "location".\n5. Always include descriptions for each parameter.\n6. Format must match the example exactly.\n\nExample inputs and outputs:\n\nInput: "best biryani places in delhi"\nOutput:\nParameter: dish_type\nValue: biryani\nDescription: Type of dish requested\n\nParameter: location\nValue: delhi\nDescription: Search location requested\n\nParameter: action\nValue: search\nDescription: Search action requested\n\nInput: "top 5 dosa ki jagah batao"\nOutput:\nParameter: limit\nValue: 5\nDescription: Number of results requested\n\nParameter: dish_type\nValue: dosa\nDescription: Type of dish requested\n\nParameter: action\nValue: search\nDescription: Search action requested'}, {'role': 'user', 'content': 'Extract parameters from this query: cheese ki 3 achi jagah'}], 'model': 'llama-3.3-70b-versatile', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.2}}
2025-01-21 12:03:47,182 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-01-21 12:03:47,182 - DEBUG - close.started
2025-01-21 12:03:47,188 - DEBUG - close.complete
2025-01-21 12:03:47,189 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2025-01-21 12:03:47,282 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002246B6A0F40>
2025-01-21 12:03:47,282 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000002246B54FE40> server_hostname='api.groq.com' timeout=None
2025-01-21 12:03:47,397 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002246B6A0700>
2025-01-21 12:03:47,397 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-21 12:03:47,397 - DEBUG - send_request_headers.complete
2025-01-21 12:03:47,397 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-21 12:03:47,397 - DEBUG - send_request_body.complete
2025-01-21 12:03:47,397 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-21 12:03:47,847 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 21 Jan 2025 07:03:47 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'905572480c68e17b-MRS'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'x-groq-region', b'me-central-1'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'996'), (b'x-ratelimit-remaining-tokens', b'5622'), (b'x-ratelimit-reset-requests', b'5m20.522999999s'), (b'x-ratelimit-reset-tokens', b'3.78s'), (b'x-request-id', b'req_01jj3tsab4fq3by3q6hssevyrx'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-01-21 12:03:47,847 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-01-21 12:03:47,847 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-21 12:03:47,862 - DEBUG - receive_response_body.complete
2025-01-21 12:03:47,864 - DEBUG - response_closed.started
2025-01-21 12:03:47,865 - DEBUG - response_closed.complete
2025-01-21 12:03:47,865 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 21 Jan 2025 07:03:47 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '905572480c68e17b-MRS', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'x-groq-region': 'me-central-1', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '996', 'x-ratelimit-remaining-tokens': '5622', 'x-ratelimit-reset-requests': '5m20.522999999s', 'x-ratelimit-reset-tokens': '3.78s', 'x-request-id': 'req_01jj3tsab4fq3by3q6hssevyrx', 'server': 'cloudflare', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-01-21 12:03:47,875 - DEBUG - Extracting parameters from response: Parameter: dish_type
Value: cheese
Description: Type of dish requested

Parameter: limit
Value: 3
Description: Number of results requested

Parameter: action
Value: search
Description: Search action requested
2025-01-21 12:03:47,880 - DEBUG - Extracted parameters: [{'parameter': 'dish_type', 'value': 'cheese', 'description': 'Type of dish requested'}, {'parameter': 'limit', 'value': 3, 'description': 'Number of results requested'}, {'parameter': 'action', 'value': 'search', 'description': 'Search action requested'}]
2025-01-21 12:03:47,883 - DEBUG - Parsed parameters: [{'parameter': 'dish_type', 'value': 'cheese', 'description': 'Type of dish requested'}, {'parameter': 'limit', 'value': 3, 'description': 'Number of results requested'}, {'parameter': 'action', 'value': 'search', 'description': 'Search action requested'}]
2025-01-21 12:03:48,417 - DEBUG - Building SSL context
2025-01-21 12:03:49,632 - DEBUG - Switching to SSL
2025-01-21 12:03:50,170 - DEBUG - SSL has been enabled
2025-01-21 12:03:50,170 - DEBUG - Starting authorization phase
2025-01-21 12:03:50,170 - DEBUG - The provided initial strategy is mysql_native_password
2025-01-21 12:03:50,572 - DEBUG - Server's response is an auth switch request
2025-01-21 12:03:50,572 - DEBUG - Switching to strategy caching_sha2_password
2025-01-21 12:03:50,573 - DEBUG - # request: b'\xe9\x19d\x93Q\xbe\xe6W\xdf\x16\xad\xbe\x93@\\\xc7p\x93Fo\x9f\x8c\x17\xc4\xc4\xeb\x05\xa8a2\xd5\xeb' size: 32
2025-01-21 12:03:50,839 - DEBUG - # server response packet: b'\x02\x00\x00\x05\x01\x03'
2025-01-21 12:03:50,840 - DEBUG - Exchanging further packets
2025-01-21 12:03:50,843 - DEBUG - caching_sha2_password completed succesfully
2025-01-21 12:03:51,674 - DEBUG - Executing SQL: 
            SELECT r.name AS restaurant_name, d.dish_name, d.price, d.popularity_score
            FROM Dishes d
            JOIN Restaurants r ON d.restaurant_id = r.restaurant_id
             WHERE (d.dish_name LIKE %s) LIMIT 3
2025-01-21 12:03:51,676 - DEBUG - With parameters: ['%cheese%']
2025-01-21 12:04:36,055 - DEBUG - Calling on_field_start with no data
2025-01-21 12:04:36,055 - DEBUG - Calling on_field_name with data[0:5]
2025-01-21 12:04:36,055 - DEBUG - Calling on_field_data with data[6:76]
2025-01-21 12:04:36,055 - DEBUG - Calling on_field_end with no data
2025-01-21 12:04:36,055 - DEBUG - Calling on_end with no data
2025-01-21 12:04:36,055 - DEBUG - Received query: cheese ki 3 achi jagah jis ki price 5 se uper ho
2025-01-21 12:04:36,071 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a parameter extraction system for a restaurant search application that handles both English and Hindi/Hinglish queries. For each query, extract key parameters and format them exactly like this example:\n\nParameter: limit\nValue: 10\nDescription: Number of results requested\n\nParameter: dish_type \nValue: biryani\nDescription: Type of dish or cuisine requested\n\nParameter: action\nValue: search\nDescription: Type of action requested\n\nRules:\n1. For number limits (like "top 10"), always use parameter name "limit" with numeric value.\n2. For food items (biryani, dosa etc), always use parameter name "dish_type".\n3. For actions (find, search, batao, dikha etc), always use parameter name "action" with value "search".\n4. For locations (area, jagah etc), use parameter name "location".\n5. Always include descriptions for each parameter.\n6. Format must match the example exactly.\n\nExample inputs and outputs:\n\nInput: "best biryani places in delhi"\nOutput:\nParameter: dish_type\nValue: biryani\nDescription: Type of dish requested\n\nParameter: location\nValue: delhi\nDescription: Search location requested\n\nParameter: action\nValue: search\nDescription: Search action requested\n\nInput: "top 5 dosa ki jagah batao"\nOutput:\nParameter: limit\nValue: 5\nDescription: Number of results requested\n\nParameter: dish_type\nValue: dosa\nDescription: Type of dish requested\n\nParameter: action\nValue: search\nDescription: Search action requested'}, {'role': 'user', 'content': 'Extract parameters from this query: cheese ki 3 achi jagah jis ki price 5 se uper ho'}], 'model': 'llama-3.3-70b-versatile', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.2}}
2025-01-21 12:04:36,077 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-01-21 12:04:36,078 - DEBUG - close.started
2025-01-21 12:04:36,079 - DEBUG - close.complete
2025-01-21 12:04:36,080 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2025-01-21 12:04:36,172 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002246B6DD930>
2025-01-21 12:04:36,172 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000002246B54FE40> server_hostname='api.groq.com' timeout=None
2025-01-21 12:04:36,291 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002246B6DCF40>
2025-01-21 12:04:36,293 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-21 12:04:36,294 - DEBUG - send_request_headers.complete
2025-01-21 12:04:36,295 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-21 12:04:36,295 - DEBUG - send_request_body.complete
2025-01-21 12:04:36,295 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-21 12:04:37,477 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 21 Jan 2025 07:04:37 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'9055737998aa0c4d-MRS'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'x-groq-region', b'me-central-1'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'995'), (b'x-ratelimit-remaining-tokens', b'5615'), (b'x-ratelimit-reset-requests', b'6m22.986s'), (b'x-ratelimit-reset-tokens', b'3.85s'), (b'x-request-id', b'req_01jj3ttt6hf0288bwqhejdmz09'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-01-21 12:04:37,480 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-01-21 12:04:37,481 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-21 12:04:37,482 - DEBUG - receive_response_body.complete
2025-01-21 12:04:37,483 - DEBUG - response_closed.started
2025-01-21 12:04:37,484 - DEBUG - response_closed.complete
2025-01-21 12:04:37,485 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 21 Jan 2025 07:04:37 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '9055737998aa0c4d-MRS', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'x-groq-region': 'me-central-1', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '995', 'x-ratelimit-remaining-tokens': '5615', 'x-ratelimit-reset-requests': '6m22.986s', 'x-ratelimit-reset-tokens': '3.85s', 'x-request-id': 'req_01jj3ttt6hf0288bwqhejdmz09', 'server': 'cloudflare', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-01-21 12:04:37,496 - DEBUG - Extracting parameters from response: Parameter: dish_type
Value: cheese
Description: Type of dish requested

Parameter: limit
Value: 3
Description: Number of results requested

Parameter: location
Value: None
Description: No specific location mentioned

Parameter: action
Value: search
Description: Search action requested

Parameter: price
Value: 5
Description: Minimum price threshold requested 

Note: Since the query does not explicitly mention a location, the location parameter is set to "None". Also, note that "price" is not in the original rules, but it seems like a necessary parameter based on the query. If you want to follow the rules strictly, you might need to adjust or ignore the price information. 

However, if you want to follow the rules strictly and ignore the price information, the output would be:

Parameter: dish_type
Value: cheese
Description: Type of dish requested

Parameter: limit
Value: 3
Description: Number of results requested

Parameter: action
Value: search
Description: Search action requested
2025-01-21 12:04:37,510 - DEBUG - Extracted parameters: [{'parameter': 'dish_type', 'value': 'cheese', 'description': 'Type of dish requested'}, {'parameter': 'limit', 'value': 3, 'description': 'Number of results requested'}, {'parameter': 'location', 'value': 'None', 'description': 'No specific location mentioned'}, {'parameter': 'action', 'value': 'search', 'description': 'Search action requested'}, {'parameter': 'price', 'value': 5, 'description': 'Minimum price threshold requested'}, {'parameter': 'dish_type', 'value': 'cheese', 'description': 'Type of dish requested'}, {'parameter': 'limit', 'value': 3, 'description': 'Number of results requested'}, {'parameter': 'action', 'value': 'search', 'description': 'Search action requested'}]
2025-01-21 12:04:37,514 - DEBUG - Parsed parameters: [{'parameter': 'dish_type', 'value': 'cheese', 'description': 'Type of dish requested'}, {'parameter': 'limit', 'value': 3, 'description': 'Number of results requested'}, {'parameter': 'location', 'value': 'None', 'description': 'No specific location mentioned'}, {'parameter': 'action', 'value': 'search', 'description': 'Search action requested'}, {'parameter': 'price', 'value': 5, 'description': 'Minimum price threshold requested'}, {'parameter': 'dish_type', 'value': 'cheese', 'description': 'Type of dish requested'}, {'parameter': 'limit', 'value': 3, 'description': 'Number of results requested'}, {'parameter': 'action', 'value': 'search', 'description': 'Search action requested'}]
2025-01-21 12:04:38,050 - DEBUG - Building SSL context
2025-01-21 12:04:39,626 - DEBUG - Switching to SSL
2025-01-21 12:04:40,161 - DEBUG - SSL has been enabled
2025-01-21 12:04:40,161 - DEBUG - Starting authorization phase
2025-01-21 12:04:40,161 - DEBUG - The provided initial strategy is mysql_native_password
2025-01-21 12:04:40,544 - DEBUG - Server's response is an auth switch request
2025-01-21 12:04:40,544 - DEBUG - Switching to strategy caching_sha2_password
2025-01-21 12:04:40,544 - DEBUG - # request: b'\x80\x8d\x0cP\xf0hTK\xdcD5E\xf3\x99ga*\xcd\x18\xb5\x06`\xb9\xdco\xf3EVA\xd6h\x88' size: 32
2025-01-21 12:04:40,815 - DEBUG - # server response packet: b'\x02\x00\x00\x05\x01\x03'
2025-01-21 12:04:40,815 - DEBUG - Exchanging further packets
2025-01-21 12:04:40,815 - DEBUG - caching_sha2_password completed succesfully
2025-01-21 12:04:41,664 - DEBUG - Executing SQL: 
            SELECT r.name AS restaurant_name, d.dish_name, d.price, d.popularity_score
            FROM Dishes d
            JOIN Restaurants r ON d.restaurant_id = r.restaurant_id
             WHERE (d.dish_name LIKE %s) AND r.location LIKE %s AND (d.dish_name LIKE %s) LIMIT 3
2025-01-21 12:04:41,664 - DEBUG - With parameters: ['%cheese%', '%None%', '%cheese%']
2025-01-21 12:04:42,436 - ERROR - Database connection error: 1054 (42S22): Unknown column 'r.location' in 'where clause'
2025-01-21 12:04:42,437 - ERROR - Database query error: 1054 (42S22): Unknown column 'r.location' in 'where clause'
2025-01-21 12:05:16,296 - DEBUG - close.started
2025-01-21 12:05:16,298 - DEBUG - close.complete
2025-01-21 12:05:25,257 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 12:05:25,257 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 12:05:25,828 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 12:05:25,844 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 12:05:26,513 - DEBUG - Using selector: SelectSelector
2025-01-21 12:05:26,765 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 12:05:26,768 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 12:05:27,404 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-01-21 12:05:27,404 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2025-01-21 12:05:43,148 - DEBUG - Calling on_field_start with no data
2025-01-21 12:05:43,148 - DEBUG - Calling on_field_name with data[0:5]
2025-01-21 12:05:43,148 - DEBUG - Calling on_field_data with data[6:76]
2025-01-21 12:05:43,148 - DEBUG - Calling on_field_end with no data
2025-01-21 12:05:43,148 - DEBUG - Calling on_end with no data
2025-01-21 12:05:43,148 - DEBUG - Received query: cheese ki 3 achi jagah jis ki price 5 se uper ho
2025-01-21 12:05:43,177 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a parameter extraction system for a restaurant search application that handles both English and Hindi/Hinglish queries. For each query, extract key parameters and format them exactly like this example:\n\nParameter: limit\nValue: 10\nDescription: Number of results requested\n\nParameter: dish_type \nValue: biryani\nDescription: Type of dish or cuisine requested\n\nParameter: action\nValue: search\nDescription: Type of action requested\n\nRules:\n1. For number limits (like "top 10"), always use parameter name "limit" with numeric value.\n2. For food items (biryani, dosa etc), always use parameter name "dish_type".\n3. For actions (find, search, batao, dikha etc), always use parameter name "action" with value "search".\n4. For locations (area, jagah etc), use parameter name "location".\n5. Always include descriptions for each parameter.\n6. Format must match the example exactly.\n\nExample inputs and outputs:\n\nInput: "best biryani places in delhi"\nOutput:\nParameter: dish_type\nValue: biryani\nDescription: Type of dish requested\n\nParameter: location\nValue: delhi\nDescription: Search location requested\n\nParameter: action\nValue: search\nDescription: Search action requested\n\nInput: "top 5 dosa ki jagah batao"\nOutput:\nParameter: limit\nValue: 5\nDescription: Number of results requested\n\nParameter: dish_type\nValue: dosa\nDescription: Type of dish requested\n\nParameter: action\nValue: search\nDescription: Search action requested'}, {'role': 'user', 'content': 'Extract parameters from this query: cheese ki 3 achi jagah jis ki price 5 se uper ho'}], 'model': 'llama-3.3-70b-versatile', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.2}}
2025-01-21 12:05:43,205 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-01-21 12:05:43,214 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2025-01-21 12:05:43,321 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002588C5416C0>
2025-01-21 12:05:43,322 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000002588C43FDC0> server_hostname='api.groq.com' timeout=None
2025-01-21 12:05:43,428 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002588C541690>
2025-01-21 12:05:43,428 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-21 12:05:43,428 - DEBUG - send_request_headers.complete
2025-01-21 12:05:43,428 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-21 12:05:43,428 - DEBUG - send_request_body.complete
2025-01-21 12:05:43,428 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-21 12:05:44,264 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 21 Jan 2025 07:05:43 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'9055751d49b7e1cd-MRS'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'x-groq-region', b'me-central-1'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'994'), (b'x-ratelimit-remaining-tokens', b'5615'), (b'x-ratelimit-reset-requests', b'7m31.376999999s'), (b'x-ratelimit-reset-tokens', b'3.85s'), (b'x-request-id', b'req_01jj3twvn0evjt48ye8x131xrv'), (b'Set-Cookie', b'__cf_bm=cRd2GiRhct21WxTKX6TWtEMQ9xU4tkIjFVoM3E1nMgI-1737443143-1.0.1.1-4bXUtMkIqb4XX3eGR3rUCoi.Dy445YWFshqna6cKbl.sbf1nuuYM0B4AL42y3x19AFoh2_voKH0GrrGulQwybQ; path=/; expires=Tue, 21-Jan-25 07:35:43 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-01-21 12:05:44,265 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-01-21 12:05:44,265 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-21 12:05:44,272 - DEBUG - receive_response_body.complete
2025-01-21 12:05:44,273 - DEBUG - response_closed.started
2025-01-21 12:05:44,273 - DEBUG - response_closed.complete
2025-01-21 12:05:44,275 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 21 Jan 2025 07:05:43 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '9055751d49b7e1cd-MRS', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'x-groq-region': 'me-central-1', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '994', 'x-ratelimit-remaining-tokens': '5615', 'x-ratelimit-reset-requests': '7m31.376999999s', 'x-ratelimit-reset-tokens': '3.85s', 'x-request-id': 'req_01jj3twvn0evjt48ye8x131xrv', 'set-cookie': '__cf_bm=cRd2GiRhct21WxTKX6TWtEMQ9xU4tkIjFVoM3E1nMgI-1737443143-1.0.1.1-4bXUtMkIqb4XX3eGR3rUCoi.Dy445YWFshqna6cKbl.sbf1nuuYM0B4AL42y3x19AFoh2_voKH0GrrGulQwybQ; path=/; expires=Tue, 21-Jan-25 07:35:43 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-01-21 12:05:44,322 - DEBUG - Extracting parameters from response: Parameter: dish_type
Value: cheese
Description: Type of dish requested

Parameter: limit
Value: 3
Description: Number of results requested

Parameter: location
Value: None
Description: No specific location mentioned

Parameter: action
Value: search
Description: Search action requested

Parameter: price
Value: 5
Description: Minimum price threshold requested 

Note: Since the query does not explicitly mention a location, the location parameter is set to "None". Also, note that "price" is not in the original rules, but it seems like a necessary parameter for this query. If you want to follow the rules strictly, you might need to modify them to include price or handle it differently.
2025-01-21 12:05:44,326 - DEBUG - Extracted parameters: [{'parameter': 'dish_type', 'value': 'cheese', 'description': 'Type of dish requested'}, {'parameter': 'limit', 'value': 3, 'description': 'Number of results requested'}, {'parameter': 'location', 'value': 'None', 'description': 'No specific location mentioned'}, {'parameter': 'action', 'value': 'search', 'description': 'Search action requested'}, {'parameter': 'price', 'value': 5, 'description': 'Minimum price threshold requested'}]
2025-01-21 12:05:44,327 - DEBUG - Parsed parameters: [{'parameter': 'dish_type', 'value': 'cheese', 'description': 'Type of dish requested'}, {'parameter': 'limit', 'value': 3, 'description': 'Number of results requested'}, {'parameter': 'location', 'value': 'None', 'description': 'No specific location mentioned'}, {'parameter': 'action', 'value': 'search', 'description': 'Search action requested'}, {'parameter': 'price', 'value': 5, 'description': 'Minimum price threshold requested'}]
2025-01-21 12:05:44,905 - DEBUG - Building SSL context
2025-01-21 12:05:46,701 - DEBUG - Switching to SSL
2025-01-21 12:05:47,259 - DEBUG - SSL has been enabled
2025-01-21 12:05:47,259 - DEBUG - Starting authorization phase
2025-01-21 12:05:47,259 - DEBUG - The provided initial strategy is mysql_native_password
2025-01-21 12:05:47,259 - INFO - package: mysql.connector.plugins
2025-01-21 12:05:47,259 - INFO - plugin_name: mysql_native_password
2025-01-21 12:05:47,277 - INFO - AUTHENTICATION_PLUGIN_CLASS: MySQLNativePasswordAuthPlugin
2025-01-21 12:05:47,659 - DEBUG - Server's response is an auth switch request
2025-01-21 12:05:47,659 - DEBUG - Switching to strategy caching_sha2_password
2025-01-21 12:05:47,659 - INFO - package: mysql.connector.plugins
2025-01-21 12:05:47,659 - INFO - plugin_name: caching_sha2_password
2025-01-21 12:05:47,659 - INFO - AUTHENTICATION_PLUGIN_CLASS: MySQLCachingSHA2PasswordAuthPlugin
2025-01-21 12:05:47,659 - DEBUG - # request: b'\xe2\xbe\x02 \x00\xf1v/\xbb\xe8}\xbe\xdfDl\xe0\xbb\x0c\xff6o^\xf9X~X\xc6\x8e\x12\xf0\x08\xa9' size: 32
2025-01-21 12:05:47,914 - DEBUG - # server response packet: b'\x02\x00\x00\x05\x01\x03'
2025-01-21 12:05:47,914 - DEBUG - Exchanging further packets
2025-01-21 12:05:47,914 - DEBUG - caching_sha2_password completed succesfully
2025-01-21 12:05:48,710 - DEBUG - Executing SQL: 
            SELECT r.name AS restaurant_name, d.dish_name, d.price, d.popularity_score
            FROM Dishes d
            JOIN Restaurants r ON d.restaurant_id = r.restaurant_id
             WHERE (d.dish_name LIKE %s) LIMIT 3
2025-01-21 12:05:48,712 - DEBUG - With parameters: ['%cheese%']
